         198668384 function calls (193956861 primitive calls) in 279.605 seconds

   Ordered by: call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
 14291906    9.434    0.000   12.589    0.000 reportviews.py:805(<genexpr>)
 13351704    1.588    0.000    1.588    0.000 {method 'items' of 'dict' objects}
 11086065    1.667    0.000    1.667    0.000 reportviews.py:790(<lambda>)
  9458706    1.481    0.000    1.514    0.000 {method 'get' of 'dict' objects}
  8688343    1.001    0.000    1.001    0.000 {built-in method builtins.id}
  6784409    1.430    0.000    1.430    0.000 coreviews.py:44(__init__)
  6764634    2.184    0.000    8.325    0.000 reportviews.py:802(<genexpr>)
  6584668    2.007    0.000    2.007    0.000 multigraph.py:776(get_edge_data)
5996338/5994938    1.199    0.000    1.377    0.000 {built-in method builtins.isinstance}
  5814417    1.614    0.000    1.614    0.000 {method 'update' of 'dict' objects}
  5582553    2.525    0.000    2.525    0.000 <string>:2(__init__)
  5382612   10.815    0.000   16.854    0.000 hash_weights.py:40(put)
  5161814    0.693    0.000    0.693    0.000 {method 'append' of 'list' objects}
4372442/754179    7.717    0.000   18.896    0.000 copy.py:132(deepcopy)
3584515/3583843    1.642    0.000    9.039    0.000 {built-in method builtins.hasattr}
  2900961    2.005    0.000   10.340    0.000 reportviews.py:804(__iter__)
  2896841    0.933    0.000    0.933    0.000 reportviews.py:778(<listcomp>)
  2896841    7.400    0.000    8.334    0.000 reportviews.py:778(<lambda>)
2521951/2517457    0.609    0.000    1.077    0.000 {built-in method builtins.getattr}
  2392377    0.586    0.000    0.586    0.000 {built-in method builtins.iter}
  2341295    0.651    0.000    0.651    0.000 graph.py:416(__contains__)
  2320856    0.329    0.000    0.329    0.000 copy.py:190(_deepcopy_atomic)
2270390/2261576    0.360    0.000    0.367    0.000 {built-in method builtins.len}
  2051326    1.698    0.000    2.204    0.000 copy.py:253(_keep_alive)
  2022965    7.118    0.000    7.652    0.000 multidigraph.py:329(succ)
  1974108    1.239    0.000    1.620    0.000 coreviews.py:101(__getitem__)
  1675800    0.121    0.000    0.121    0.000 {method 'clear' of 'dict' objects}
  1667981    1.376    0.000    9.702    0.000 reportviews.py:906(__init__)
  1667981    1.253    0.000   10.955    0.000 multidigraph.py:523(edges)
  1528122    0.261    0.000    0.261    0.000 {built-in method builtins.issubclass}
  1527061    4.001    0.000   13.908    0.000 reportviews.py:1109(__call__)
  1518939    8.003    0.000    9.908    0.000 reportviews.py:769(__init__)
  1514819    1.118    0.000    1.905    0.000 graph.py:1827(nbunch_iter)
1383813/1382069    1.479    0.000    9.808    0.000 {built-in method builtins.sum}
  1382022    1.968    0.000   14.026    0.000 reportviews.py:801(__len__)
  1309284    0.239    0.000    0.239    0.000 hash_weights.py:38(<lambda>)
  1218375    0.582    0.000    0.632    0.000 reportviews.py:1085(__iter__)
  1216176    0.812    0.000    2.597    0.000 graph.py:451(__getitem__)
  1216176    0.253    0.000    0.253    0.000 coreviews.py:53(__getitem__)
  1216176    0.647    0.000    0.850    0.000 coreviews.py:80(__getitem__)
  1216176    0.651    0.000    0.895    0.000 multidigraph.py:310(adj)
  1109045    1.439    0.000    1.439    0.000 {method '__deepcopy__' of 'numpy.generic' objects}
   833406    0.364    0.000    0.364    0.000 data_structures.py:377(__getitem__)
799996/799852    0.290    0.000    1.050    0.000 copy.py:274(<genexpr>)
   757932    0.323    0.000    0.493    0.000 coreviews.py:50(__iter__)
   591225    0.300    0.000    0.300    0.000 hash_weights.py:17(sort_buckets)
   518996    0.289    0.000    0.513    0.000 _collections_abc.py:879(__iter__)
   466570    0.339    0.000    0.339    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
   466570    0.186    0.000    0.525    0.000 ops.py:2376(type)
   455111    0.123    0.000    0.123    0.000 {built-in method __new__ of type object at 0x107b963a8}
   448362    0.131    0.000    0.162    0.000 {method 'add' of 'set' objects}
   413238    0.579    0.000    6.948    0.000 generic.py:178(shortest_path_length)
   413238    1.085    0.000    6.322    0.000 unweighted.py:189(bidirectional_shortest_path)
   413238    2.556    0.000    4.840    0.000 unweighted.py:245(_bidirectional_pred_succ)
411713/228337    0.261    0.000    2.616    0.000 {built-in method builtins.next}
401210/200159    1.142    0.000    8.867    0.000 copy.py:237(_deepcopy_dict)
   399978    0.336    0.000    0.336    0.000 {method '__reduce_ex__' of 'object' objects}
399978/199963    1.482    0.000   11.156    0.000 copy.py:269(_reconstruct)
   399886    0.234    0.000    0.327    0.000 copyreg.py:87(__newobj__)
   360750    0.046    0.000    0.046    0.000 {method 'popleft' of 'collections.deque' objects}
   354984    0.268    0.000    0.361    0.000 multidigraph.py:348(pred)
   354984    0.063    0.000    0.063    0.000 multidigraph.py:776(is_directed)
   354695    0.091    0.000    0.091    0.000 dxhash.py:15(get_weight)
   346961    0.077    0.000    0.077    0.000 context.py:1826(context_safe)
   343353    0.055    0.000    0.055    0.000 {method 'reverse' of 'list' objects}
   322322    0.178    0.000    0.332    0.000 _collections_abc.py:895(__reversed__)
   304880    0.042    0.000    0.042    0.000 reportviews.py:787(<lambda>)
   287551    4.715    0.000    4.715    0.000 {function Random.seed at 0x7fe78df19710}
   287551    0.869    0.000    6.260    0.000 random.py:97(seed)
   285064    0.117    0.000    0.179    0.000 layer_utils.py:37(is_layer)
   279870    0.163    0.000    0.376    0.000 layer_utils.py:43(has_weights)
   273646    0.332    0.000    0.437    0.000 graph.py:666(nodes)
   273646    0.105    0.000    0.105    0.000 reportviews.py:167(__init__)
   269602    0.113    0.000    0.113    0.000 reportviews.py:177(__getitem__)
   262963    0.202    0.000    0.202    0.000 {method 'getrandbits' of '_random.Random' objects}
   255884    0.115    0.000    0.166    0.000 compat.py:90(as_text)
   255340    0.150    0.000    0.314    0.000 compat.py:114(as_str)
   243641    0.059    0.000    0.059    0.000 ops.py:397(dtype)
   240767    0.136    0.000    0.136    0.000 context.py:791(executing_eagerly)
   235617    0.327    0.000    0.359    0.000 dtypes.py:192(__eq__)
   225062    0.134    0.000    0.134    0.000 ops.py:5557(get_default)
   225062    0.190    0.000    0.324    0.000 ops.py:5989(get_default_graph)
   219706    0.371    0.000    0.436    0.000 contextlib.py:81(__init__)
219706/131866    0.242    0.000    2.138    0.000 contextlib.py:107(__enter__)
219706/138881    0.289    0.000    0.980    0.000 contextlib.py:116(__exit__)
   219706    0.178    0.000    0.614    0.000 contextlib.py:237(helper)
   210556    0.109    0.000    0.109    0.000 {built-in method math.ceil}
   206719    0.086    0.000    0.119    0.000 object_identity.py:63(__hash__)
   206719    0.050    0.000    0.050    0.000 object_identity.py:35(__init__)
   203835    0.101    0.000    0.101    0.000 {method 'encode' of 'str' objects}
   194585    0.042    0.000    0.042    0.000 ops.py:392(op)
   188770    0.052    0.000    0.057    0.000 {method 'extend' of 'list' objects}
   188294    0.039    0.000    0.039    0.000 {method 'values' of 'dict' objects}
   176610    0.321    0.000    0.400    0.000 dtypes.py:606(as_dtype)
   175948    0.384    0.000    0.685    0.000 {built-in method builtins.sorted}
173197/40400    1.250    0.000   37.531    0.001 base.py:30(_flow_path)
   172985    0.171    0.000    0.171    0.000 dtypes.py:71(_is_ref_dtype)
   172985    0.107    0.000    0.278    0.000 dtypes.py:84(base_dtype)
   169146    0.040    0.000    0.040    0.000 ops.py:2381(graph)
   165516    0.453    0.000    0.504    0.000 {built-in method builtins.max}
   158977    0.046    0.000    0.066    0.000 {built-in method builtins.setattr}
   158931    0.106    0.000    0.146    0.000 object_identity.py:183(_wrap_key)
   154754    0.030    0.000    0.030    0.000 {method 'bit_length' of 'int' objects}
   154754    0.177    0.000    0.177    0.000 {method 'random' of '_random.Random' objects}
   154754    0.248    0.000    0.710    0.000 random.py:174(randrange)
   154754    0.131    0.000    0.841    0.000 random.py:218(randint)
   154754    0.230    0.000    0.462    0.000 random.py:224(_randbelow)
   141113    0.520    0.000   15.199    0.000 copy.py:211(_deepcopy_list)
   139430    0.154    0.000    0.258    0.000 context.py:1851(executing_eagerly)
   132811    0.095    0.000    0.095    0.000 {built-in method from_bytes}
   132797    0.221    0.000    0.221    0.000 {built-in method _hashlib.openssl_sha512}
   132797    0.188    0.000    0.188    0.000 {method 'digest' of '_hashlib.HASH' objects}
   132797    0.100    0.000    0.100    0.000 reportviews.py:1105(__getitem__)
   132797    0.217    0.000    1.016    0.000 hash_weights.py:58(get_bucket_list)
   132797    0.062    0.000    0.062    0.000 base.py:46(<listcomp>)
   132797    0.263    0.000    0.263    0.000 base.py:56(<dictcomp>)
   132797    1.468    0.000    8.084    0.000 dag_calculator.py:108(_find_possible_nexthops)
   132797    0.598    0.000   11.998    0.000 dag_calculator.py:169(calculate)
   132797    1.453    0.000   22.890    0.000 dxhash.py:18(_choose_nexthop)
   131962    0.025    0.000    0.025    0.000 tensor_shape.py:247(value)
   128934    0.215    0.000    0.226    0.000 _collections_abc.py:742(__iter__)
   127764    0.038    0.000    0.067    0.000 object_identity.py:175(<genexpr>)
   123532    0.070    0.000    0.097    0.000 ops.py:4998(_device_function_stack)
122991/121071    0.177    0.000    0.222    0.000 optimizer_v2.py:706(__getattribute__)
   121513    0.063    0.000    0.092    0.000 ops.py:4079(_name_stack)
   117603    0.365    0.000    0.413    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
   117603    0.089    0.000    0.502    0.000 nest.py:274(flatten)
   106470    0.065    0.000    0.065    0.000 {method 'acquire' of '_thread.lock' objects}
   105496    0.069    0.000    0.110    0.000 ops.py:5075(_control_dependencies_stack)
   105486    0.031    0.000    0.034    0.000 ops.py:796(_as_tf_output)
   103117    0.084    0.000    0.123    0.000 ops.py:5094(_distribution_strategy_stack)
   100896    0.062    0.000    0.064    0.000 object_identity.py:211(__iter__)
    97494    0.040    0.000    0.040    0.000 lock_util.py:110(_validate_group_id)
    94380    0.042    0.000    0.042    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
    92399    0.019    0.000    0.019    0.000 ops.py:2036(_get_control_flow_context)
    90184    0.112    0.000    0.121    0.000 {built-in method _abc._abc_instancecheck}
    90184    0.052    0.000    0.174    0.000 abc.py:137(__instancecheck__)
    90127    0.081    0.000    0.081    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
    87926    0.177    0.000    0.263    0.000 object_identity.py:174(__init__)
    86763    0.030    0.000    0.030    0.000 ops.py:2307(outputs)
    81994    0.061    0.000    0.084    0.000 nest.py:203(_yield_sorted_items)
    81790    0.055    0.000    0.128    0.000 c_api_util.py:157(tf_buffer)
    80823    0.050    0.000    0.072    0.000 reportviews.py:174(__iter__)
    79619    0.112    0.000    0.261    0.000 object_identity.py:186(__contains__)
    79467    0.038    0.000    0.038    0.000 ops.py:3071(_c_graph)
    79272    0.339    0.000    0.339    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
    78082    0.240    0.000    0.240    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
    76318    0.081    0.000    0.143    0.000 compat.py:64(as_bytes)
    75503    0.106    0.000    0.335    0.000 ops.py:2312(inputs)
    74318    0.105    0.000    0.105    0.000 traceable_stack.py:121(<genexpr>)
    73972    0.022    0.000    0.022    0.000 {method 'release' of '_thread.lock' objects}
    73532    0.034    0.000    0.034    0.000 {method 'pop' of 'list' objects}
72777/60825    0.043    0.000    0.058    0.000 {built-in method builtins.hash}
72067/71157    0.018    0.000    0.051    0.000 {method 'update' of 'set' objects}
    70865    0.024    0.000    0.024    0.000 {method 'pop' of 'dict' objects}
    70214    0.070    0.000    0.186    0.000 object_identity.py:195(update)
    70214    0.032    0.000    0.098    0.000 object_identity.py:196(<listcomp>)
    70046    0.040    0.000    0.058    0.000 ops.py:402(graph)
    69505    0.038    0.000    0.055    0.000 ops.py:5044(_colocation_stack)
67739/64809    0.078    0.000    1.112    0.000 {built-in method builtins.any}
    66840    0.028    0.000    0.035    0.000 ops.py:3472(<genexpr>)
    66313    0.020    0.000    0.020    0.000 ops.py:3043(_check_not_finalized)
    64996    0.212    0.000    0.212    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
    64996    0.027    0.000    0.027    0.000 lock_util.py:108(<genexpr>)
    64996    0.029    0.000    0.029    0.000 traceable_stack.py:123(peek_traceable_objs)
    62737    0.038    0.000    0.246    0.000 ops.py:421(shape)
    62584    0.188    0.000    0.188    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
60646/15430    0.094    0.000    0.138    0.000 function.py:95(_make_input_signature_hashable)
    60224    0.045    0.000    0.108    0.000 nest.py:198(_yield_value)
    55961    0.057    0.000    0.057    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
    55025    0.124    0.000    0.124    0.000 {method 'match' of 're.Pattern' objects}
    54686    0.011    0.000    0.011    0.000 while_v2.py:1019(<genexpr>)
    52209    0.017    0.000    0.017    0.000 ops.py:3354(building_function)
    52204    0.037    0.000    0.167    0.000 ops.py:1925(<genexpr>)
    51300    0.012    0.000    0.012    0.000 _flagvalues.py:141(_flags)
    50979    0.012    0.000    0.012    0.000 context.py:1718(context_switches)
    49895    0.046    0.000    0.104    0.000 registry.py:82(lookup)
    49477    0.065    0.000    0.065    0.000 traceable_stack.py:119(peek_objs)
    49041    0.011    0.000    0.011    0.000 errors_impl.py:86(message)
    49041    0.030    0.000    0.040    0.000 errors_impl.py:117(__str__)
    48973    0.018    0.000    0.018    0.000 distribute_lib.py:771(extended)
    47952    0.041    0.000    0.041    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
47573/45521    0.135    0.000    3.801    0.000 ops.py:1448(convert_to_tensor)
    47150    0.032    0.000    0.080    0.000 auto_control_deps.py:125(op_is_stateful)
    47150    0.062    0.000    0.161    0.000 tpu.py:239(replace_with_unreplicated_resources)
    47098    0.012    0.000    0.012    0.000 {built-in method builtins.callable}
    46984    0.054    0.000    0.258    0.000 {built-in method builtins.all}
    46809    0.024    0.000    0.033    0.000 traceable_stack.py:127(__len__)
    45696    0.023    0.000    0.023    0.000 op_def_registry.py:34(get)
    45494    0.021    0.000    0.021    0.000 ops.py:4086(_name_stack)
    45470    0.116    0.000    0.373    0.000 ops.py:4091(name_scope)
    45068    0.044    0.000    0.067    0.000 context.py:773(_mode)
    44966    0.011    0.000    0.011    0.000 ops.py:3148(_get_control_flow_context)
    44172    0.023    0.000    0.031    0.000 object_identity.py:128(_wrap_key)
    43842    0.025    0.000    0.047    0.000 object_identity.py:54(__eq__)
    43842    0.016    0.000    0.022    0.000 object_identity.py:42(_assert_type)
    43406    0.028    0.000    0.028    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
    43009    0.026    0.000    0.033    0.000 tensor_shape.py:185(__init__)
    41942    0.053    0.000    0.162    0.000 object_identity.py:192(add)
    41131    0.102    0.000    0.211    0.000 dtypes.py:172(is_compatible_with)
    41087    0.025    0.000    0.034    0.000 ops.py:3015(_variable_creator_stack)
    40895    0.047    0.000    0.047    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
    40478    0.039    0.000    0.039    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
    40478    0.031    0.000    0.070    0.000 ops.py:216(uid)
    40400    0.028    0.000    0.028    0.000 base.py:76(<listcomp>)
    40400    0.119    0.000    0.167    0.000 base.py:75(_check_cycle)
    40195    0.010    0.000    0.010    0.000 array_ops.py:1485(<genexpr>)
    39991    0.015    0.000    0.015    0.000 function.py:2463(input_signature)
    39940    0.042    0.000    0.063    0.000 _collections_abc.py:676(items)
    39940    0.020    0.000    0.020    0.000 _collections_abc.py:698(__init__)
    39499    0.608    0.000    0.703    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
    39499    0.216    0.000    1.378    0.000 ops.py:2471(get_attr)
    39388    0.130    0.000    0.725    0.000 nest.py:496(_pack_sequence_as)
    39388    0.051    0.000    0.776    0.000 nest.py:536(pack_sequence_as)
    39041    0.023    0.000    0.087    0.000 dtypes.py:205(__ne__)
38311/22765    0.024    0.000    0.054    0.000 nest.py:720(_yield_flat_up_to)
    38244    0.031    0.000    0.045    0.000 function.py:2840(input_signature)
    38216    0.088    0.000    0.142    0.000 ops.py:6385(name_scope)
38073/35098    0.079    0.000    4.753    0.000 func_graph.py:595(capture)
    37807    0.208    0.000    0.479    0.000 ops.py:359(__init__)
    37772    0.144    0.000    0.144    0.000 c_api_util.py:190(tf_output)
37636/37596    0.050    0.000    0.123    0.000 tensor_shape.py:746(__init__)
    37324    0.040    0.000    0.067    0.000 six.py:588(iteritems)
    37253    0.047    0.000    0.047    0.000 ops.py:3800(_get_operation_by_name_unsafe)
    37174    0.012    0.000    0.017    0.000 gradients_util.py:382(_IsFunction)
    36953    0.009    0.000    0.009    0.000 tensor_shape.py:826(dims)
    36828    0.071    0.000    0.202    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
    36440    0.039    0.000    0.410    0.000 ops.py:386(_create_with_tf_output)
    36405    0.066    0.000    0.066    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
    36068    0.034    0.000    0.054    0.000 ag_ctx.py:29(_control_ctx)
    35646    0.013    0.000    0.013    0.000 {method 'lower' of 'str' objects}
    35602    0.139    0.000    0.217    0.000 ops.py:4206(unique_name)
    34846    0.013    0.000    0.013    0.000 {built-in method _thread.get_ident}
    34782    0.078    0.000    0.151    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
    34742    0.782    0.000    0.813    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
    34742    0.055    0.000    0.881    0.000 tf_stack.py:131(extract_stack)
    34482    0.019    0.000    0.025    0.000 control_flow_util.py:180(GetOutputContext)
    34430    0.034    0.000    0.045    0.000 ops.py:5387(get_controller)
    34430    0.154    0.000    0.509    0.000 ops.py:5580(get_controller)
    34372    0.009    0.000    0.009    0.000 {method 'acquire' of '_thread.RLock' objects}
    34372    0.006    0.000    0.006    0.000 {method 'release' of '_thread.RLock' objects}
    34342    0.034    0.000    0.066    0.000 control_flow_util.py:266(CheckInputFromValidContext)
    34328    0.014    0.000    0.023    0.000 __init__.py:212(_acquireLock)
    34328    0.013    0.000    0.019    0.000 __init__.py:221(_releaseLock)
    34202    0.012    0.000    0.016    0.000 __init__.py:187(_checkLevel)
    34200    0.610    0.000    0.956    0.000 __init__.py:1304(_clear_cache)
    34200    0.027    0.000    0.999    0.000 __init__.py:1349(setLevel)
    34200    0.018    0.000    1.088    0.000 __init__.py:171(value)
    34200    0.046    0.000    1.070    0.000 __init__.py:176(_update_logging_levels)
    34200    0.024    0.000    1.207    0.000 __init__.py:269(set_verbosity)
    34200    0.058    0.000    1.183    0.000 _flagvalues.py:493(__setattr__)
    34200    0.019    0.000    0.030    0.000 _flagvalues.py:512(_assert_validators)
    34200    0.022    0.000    0.025    0.000 converter.py:138(absl_to_standard)
    33920    0.041    0.000    0.101    0.000 object_identity.py:131(__getitem__)
    33900    0.021    0.000    0.021    0.000 context.py:514(ensure_initialized)
    33829    0.041    0.000    0.052    0.000 tensor_util.py:986(is_tensor)
    33027    0.019    0.000    0.030    0.000 op_def_library.py:80(_IsListValue)
    32862    0.011    0.000    0.011    0.000 ops.py:3039(_variable_creator_stack)
    32862    0.014    0.000    0.014    0.000 ops.py:5101(_distribution_strategy_stack)
    32862    0.019    0.000    0.026    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
    32862    0.010    0.000    0.010    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
    32862    0.207    0.000    1.124    0.000 func_graph.py:365(inner_cm)
    32546    0.018    0.000    0.018    0.000 context.py:813(device_name)
    32533    0.138    0.000    0.173    0.000 ops.py:3052(_add_op)
    32498    0.031    0.000    0.031    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
    32498    2.088    0.000    2.088    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
    32498    0.217    0.000    0.217    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
    32498    0.021    0.000    0.041    0.000 threading.py:255(_is_owned)
    32498    0.069    0.000    0.110    0.000 threading.py:335(notify)
    32498    0.039    0.000    0.157    0.000 threading.py:358(notify_all)
    32498    0.032    0.000    0.321    0.000 lock_util.py:126(__exit__)
    32498    0.028    0.000    0.268    0.000 lock_util.py:123(__enter__)
    32498    0.022    0.000    0.022    0.000 lock_util.py:119(__init__)
    32498    0.058    0.000    0.116    0.000 lock_util.py:106(_another_group_active)
    32498    0.095    0.000    0.289    0.000 lock_util.py:96(release)
    32498    0.084    0.000    0.240    0.000 lock_util.py:86(acquire)
    32498    0.405    0.000    0.700    0.000 ops.py:1737(_NodeDef)
    32498    0.428    0.000    3.767    0.000 ops.py:1764(_create_c_op)
    32498    0.855    0.000    7.081    0.000 ops.py:1839(__init__)
    32498    0.052    0.000    0.126    0.000 ops.py:1995(_control_flow_post_processing)
    32498    0.366    0.000   10.440    0.000 ops.py:3418(_create_op_internal)
    32498    0.286    0.000    1.173    0.000 ops.py:3521(_create_op_helper)
    32498    0.095    0.000    0.405    0.000 ops.py:4439(_apply_device_functions)
    32498    0.177    0.000    0.248    0.000 ops.py:4603(_control_dependencies_for_inputs)
    32498    0.033    0.000    0.096    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
    32498    0.053    0.000    0.135    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
    32498    0.011    0.000    0.015    0.000 ops.py:5061(<dictcomp>)
    32498    0.046    0.000    0.102    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
    32498    0.029    0.000    0.116    0.000 ops.py:5153(_mutation_lock)
    32498    0.160    0.000    0.173    0.000 ops.py:6880(_reconstruct_sequence_inputs)
    32498    0.050    0.000    0.088    0.000 lock_util.py:74(group)
32342/23555    0.254    0.000   12.176    0.001 func_graph.py:528(_create_op_internal)
    31968    0.005    0.000    0.005    0.000 {method 'values' of 'collections.OrderedDict' objects}
    31963    0.021    0.000    0.021    0.000 context.py:1204(op_callbacks)
    31963    0.043    0.000    0.072    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
    30976    0.049    0.000    0.049    0.000 resource_variable_ops.py:503(device)
    30752    0.039    0.000    0.058    0.000 optimizer_v2.py:1279(_var_key)
    30428    0.129    0.000    1.112    0.000 function.py:2646(_convert_numpy_inputs)
    30102    0.017    0.000    0.059    0.000 {method 'throw' of 'generator' objects}
    30102    0.015    0.000    0.015    0.000 {built-in method sys.exc_info}
    30102    0.038    0.000    0.038    0.000 errors_impl.py:64(__init__)
    30102    0.041    0.000    0.079    0.000 errors_impl.py:264(__init__)
    29866    0.027    0.000    0.048    0.000 tape.py:150(stop_recording)
    29783    0.006    0.000    0.006    0.000 {method 'keys' of 'dict' objects}
    29350    0.008    0.000    0.008    0.000 op_def_library.py:235(_MaybeColocateWith)
29282/29271    0.012    0.000    0.012    0.000 tf_stack.py:123(get_filtered_filenames)
29282/29271    0.019    0.000    0.019    0.000 api.py:122(get_effective_source_map)
    29155    0.080    0.000    0.221    0.000 function.py:2632(_is_ndarray)
    29027    0.027    0.000    0.092    0.000 ops.py:3823(_get_operation_by_tf_operation)
    29027    0.075    0.000    0.176    0.000 ops.py:3848(_get_tensor_by_tf_output)
    28979    0.130    0.000    0.212    0.000 tensor_shape.py:1193(as_proto)
28868/28828    0.029    0.000    0.060    0.000 tensor_shape.py:756(<listcomp>)
    28796    0.062    0.000    0.295    0.000 ops.py:5639(init_scope)
    28402    0.017    0.000    0.017    0.000 func_graph.py:427(outer_graph)
27672/17970    0.045    0.000    0.130    0.000 base_layer.py:2756(__setattr__)
    27050    0.017    0.000    0.029    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
    27043    0.070    0.000    0.082    0.000 tensor_shape.py:1199(<listcomp>)
    26934    0.014    0.000    0.044    0.000 ops.py:2052(name)
    26151    0.111    0.000    1.869    0.000 auto_control_deps.py:519(_get_resource_inputs)
    25989    0.015    0.000    0.015    0.000 {method 'startswith' of 'str' objects}
    25899    0.047    0.000    0.047    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
    24747    0.013    0.000    0.013    0.000 context.py:749(_handle)
    24626    0.125    0.000    0.230    0.000 functools.py:37(update_wrapper)
24575/21901    0.042    0.000    9.299    0.000 dispatch.py:198(wrapper)
    24320    0.020    0.000    0.020    0.000 resource_variable_ops.py:545(handle)
    23846    0.008    0.000    0.010    0.000 ops.py:2245(_add_control_inputs)
    23702    0.044    0.000    0.064    0.000 meta_graph.py:443(_is_default_attr_value)
    23694    0.031    0.000    0.031    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
    23575    0.011    0.000    0.016    0.000 registry.py:74(list)
    23575    0.027    0.000    0.038    0.000 control_flow_util.py:82(IsInWhileLoop)
    23575    0.005    0.000    0.005    0.000 control_flow_util.py:191(GetContainingWhileContext)
    23575    0.025    0.000    0.078    0.000 dataset_ops.py:4572(_resource_resolver)
    23575    0.126    0.000    1.328    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
    23575    0.022    0.000    0.076    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
    23575    0.031    0.000    0.215    0.000 tpu.py:223(tpu_replicated_input_resolver)
    23523    0.019    0.000    0.027    0.000 func_graph.py:1057(<genexpr>)
    23150    0.014    0.000    0.014    0.000 op_def_library.py:64(_IsListParameter)
    23150    0.022    0.000    0.066    0.000 op_def_library.py:510(<listcomp>)
    22741    0.011    0.000    0.064    0.000 nest.py:1310(yield_flat_paths)
    22620    0.006    0.000    0.006    0.000 tensor_spec.py:68(dtype)
    22561    0.049    0.000    0.213    0.000 gradients_util.py:433(_Inputs)
    22534    0.017    0.000    0.022    0.000 context.py:239(pop)
    22534    0.037    0.000    0.067    0.000 context.py:219(push)
    22100    0.318    0.000    0.892    0.000 base_layer.py:2847(_flatten_layers)
    22044    0.023    0.000    0.061    0.000 auto_control_deps_utils.py:112(<genexpr>)
    21928    0.003    0.000    0.003    0.000 inspect.py:2517(name)
    21827    0.020    0.000    0.021    0.000 ops.py:6439(__init__)
    21827    0.052    0.000    0.493    0.000 ops.py:6458(__enter__)
    21827    0.032    0.000    0.099    0.000 ops.py:6498(__exit__)
    21715    0.056    0.000    0.056    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
    21291    0.011    0.000    0.015    0.000 tensor_shape.py:819(rank)
    20939    0.039    0.000    0.039    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
    20939    0.066    0.000    0.208    0.000 ops.py:444(_c_api_shape)
    20845    0.019    0.000    0.045    0.000 tensor_spec.py:87(__hash__)
    20778    0.011    0.000    0.011    0.000 ops.py:452(<listcomp>)
    20627    0.010    0.000    0.010    0.000 ops.py:5035(_device_function_stack)
    20498    0.037    0.000    2.738    0.000 constant_op.py:166(constant)
    20498    0.146    0.000    2.701    0.000 constant_op.py:267(_constant_impl)
    20308    0.006    0.000    0.006    0.000 ops.py:167(__init__)
    20308    0.005    0.000    0.005    0.000 ops.py:170(__enter__)
    20308    0.006    0.000    0.006    0.000 ops.py:173(__exit__)
    19964    0.007    0.000    0.009    0.000 func_graph.py:664(captures)
    19946    0.011    0.000    0.022    0.000 gradients_util.py:387(_Captures)
    19666    0.019    0.000    0.019    0.000 ops.py:2801(name_from_scope_name)
    19474    0.006    0.000    0.006    0.000 {method 'replace' of 'str' objects}
    19414    0.057    0.000    0.181    0.000 backprop_util.py:25(IsTrainable)
    19244    0.013    0.000    0.013    0.000 resource_variable_ops.py:498(dtype)
    18983    0.006    0.000    0.006    0.000 ops.py:3156(_set_control_flow_context)
    18816    0.186    0.000    0.249    0.000 {built-in method numpy.array}
    18783    1.114    0.000    1.115    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
    18621    0.048    0.000    0.128    0.000 op_def_library.py:173(_MakeType)
    18604    0.025    0.000    0.100    0.000 nest.py:631(<listcomp>)
    18604    0.029    0.000    0.605    0.000 nest.py:635(<listcomp>)
    18604    0.135    0.000    0.983    0.000 nest.py:573(map_structure)
    18558    0.011    0.000    0.011    0.000 ops.py:5087(_control_dependencies_stack)
    18334    0.012    0.000    0.012    0.000 traceable_stack.py:30(__init__)
    18312    0.018    0.000    0.022    0.000 data_structures.py:383(__len__)
    18243    0.031    0.000    0.042    0.000 weakref.py:432(get)
18151/10025    0.064    0.000    0.312    0.000 layer_utils.py:234(filter_empty_layer_containers)
    18137    0.036    0.000    0.077    0.000 tf_decorator.py:200(unwrap)
    18110    0.009    0.000    0.009    0.000 context.py:135(config_proto_serialized)
    17952    0.042    0.000    0.042    0.000 def_function.py:752(_get_tracing_count)
    17823    0.023    0.000    0.064    0.000 ops.py:3868(_get_op_def)
    17765    0.019    0.000    0.019    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
    17765    0.114    0.000    0.263    0.000 nest.py:129(_sequence_like)
17765/16546    0.088    0.000    0.254    0.000 nest.py:461(_packed_nest_with_indices)
    17741    0.072    0.000    0.152    0.000 tf_decorator.py:67(make_decorator)
    17741    0.043    0.000    0.054    0.000 tf_decorator.py:236(__init__)
    17737    0.005    0.000    0.005    0.000 ops.py:113(tensor_id)
    17668    0.005    0.000    0.005    0.000 data_structures.py:333(_values)
    17644    0.128    0.000    0.128    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    17644    0.020    0.000    0.149    0.000 ops.py:1027(_numpy)
    17569    0.031    0.000    0.031    0.000 op_def_library.py:38(_Attr)
    17435    0.004    0.000    0.004    0.000 tf_decorator.py:262(decorated_target)
    17421    0.002    0.000    0.002    0.000 inspect.py:2521(default)
    17359    0.030    0.000    0.041    0.000 traceable_stack.py:75(copy_metadata)
    17332    0.012    0.000    0.012    0.000 context.py:818(device_spec)
    17332    0.016    0.000    0.016    0.000 context.py:823(_set_device)
    17286    0.012    0.000    0.018    0.000 api.py:148(autograph_artifact)
    17277    0.006    0.000    0.006    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    17236    0.026    0.000    0.026    0.000 weakref.py:395(__getitem__)
    17230    0.086    0.000    0.086    0.000 weakref.py:435(__contains__)
    17215    0.018    0.000    0.053    0.000 context.py:2001(graph_mode)
    17215    0.018    0.000    0.085    0.000 ops.py:3886(as_default)
    17100    0.004    0.000    0.004    0.000 __init__.py:167(value)
    17100    0.013    0.000    0.030    0.000 __init__.py:264(get_verbosity)
    17100    0.009    0.000    0.013    0.000 _flagvalues.py:461(__getitem__)
    17088    0.075    0.000    0.273    0.000 custom_gradient.py:45(copy_handle_data)
    17005    0.017    0.000    0.023    0.000 ops.py:1033(dtype)
    16465    0.071    0.000    0.403    0.000 {method 'extendleft' of 'collections.deque' objects}
    16464    0.041    0.000    0.185    0.000 contextlib.py:210(contextmanager)
    16464    0.018    0.000    0.018    0.000 functools.py:67(wraps)
    16464    0.032    0.000    0.340    0.000 tf_contextlib.py:25(contextmanager)
    16431    0.056    0.000    0.517    0.000 func_graph.py:362(as_default)
    16383    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
    16373    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
    16363    0.059    0.000    0.059    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
    16363    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
    16363    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
    16363    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
    16363    0.014    0.000    0.074    0.000 nest.py:104(_is_namedtuple)
    16162    0.051    0.000    0.084    0.000 ops.py:2979(_variable_creator_scope)
    16077    0.023    0.000    0.082    0.000 func_graph.py:1055(device_stack_has_callable)
    16004    0.008    0.000    0.010    0.000 gradients_util.py:428(<listcomp>)
    16004    0.013    0.000    0.164    0.000 gradients_util.py:414(_NonEagerInputs)
    15840    0.025    0.000    0.104    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
    15724    0.008    0.000    0.074    0.000 ops.py:535(get_shape)
    15620    0.006    0.000    0.006    0.000 {method 'setdefault' of 'dict' objects}
    15606    0.018    0.000    0.039    0.000 resource_variable_ops.py:2127(is_resource_variable)
    15430    0.156    0.000    0.609    0.000 function.py:2977(_cache_key)
15430/14494    0.098    0.000   27.587    0.002 function.py:3147(_maybe_define_function)
    15427    0.016    0.000    0.016    0.000 weakref.py:408(__setitem__)
    15423    0.006    0.000    0.007    0.000 gradients_util.py:956(<genexpr>)
    15360    0.041    0.000    0.222    0.000 variable_scope.py:2738(variable_creator_scope)
    15360    0.041    0.000    0.132    0.000 optimizer_v2.py:735(add_slot)
    15360    0.029    0.000    0.078    0.000 optimizer_v2.py:773(get_slot)
    15228    0.097    0.000    1.224    0.000 function.py:2513(canonicalize_function_inputs)
    15202    0.101    0.000    0.113    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
    15148    0.248    0.000    0.281    0.000 constant_op.py:70(convert_to_eager_tensor)
    15148    0.022    0.000    0.303    0.000 constant_op.py:298(_constant_eager_impl)
    14933    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
    14675    0.018    0.000    0.040    0.000 ops.py:6051(_get_graph_from_inputs)
    14675    0.020    0.000    0.049    0.000 op_def_library.py:87(<listcomp>)
    14675    0.015    0.000    0.037    0.000 op_def_library.py:89(<listcomp>)
    14675    0.024    0.000    0.109    0.000 op_def_library.py:84(_Flatten)
    14675    0.026    0.000    0.026    0.000 op_def_library.py:737(<listcomp>)
14675/13969    0.933    0.000   10.711    0.001 op_def_library.py:299(_apply_op_helper)
    14639    0.011    0.000    0.025    0.000 backprop.py:170(_must_record_gradient)
    14581    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
    14581    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
    14476    0.028    0.000    0.067    0.000 gradients_util.py:395(_MaybeCaptured)
    14424    0.005    0.000    0.008    0.000 function.py:422(<genexpr>)
    14146    0.003    0.000    0.003    0.000 gradients_util.py:292(_maybe_colocate_with)
    14039    0.012    0.000    0.033    0.000 tensor_shape.py:1230(as_shape)
    13492    0.006    0.000    0.006    0.000 op_def_library.py:46(_AttrValue)
    13438    0.023    0.000    1.291    0.000 save.py:108(list_dependencies)
    13216    0.014    0.000    0.034    0.000 backend.py:639(get_graph)
    13207    0.002    0.000    0.002    0.000 {method 'append' of 'collections.deque' objects}
    12946    0.004    0.000    0.004    0.000 function.py:1964(graph)
    12748    0.006    0.000    0.008    0.000 inspect.py:2799(<genexpr>)
    12524    0.006    0.000    0.006    0.000 function.py:2566(<genexpr>)
    12261    0.013    0.000    0.016    0.000 inspect.py:158(isfunction)
    12166    0.005    0.000    0.008    0.000 gradients_util.py:836(_FilterGrad)
    12048    0.012    0.000    0.045    0.000 _collections_abc.py:657(get)
    12028    0.023    0.000    0.110    0.000 ops.py:5325(control_dependencies)
    11938    0.150    0.000    3.509    0.000 graph_only_ops.py:29(graph_placeholder)
    11910    0.006    0.000    0.006    0.000 base_layer.py:1246(trainable)
    11707    0.012    0.000    0.020    0.000 ops.py:4579(add_op)
    11604    0.016    0.000    0.809    0.000 base_layer.py:1235(<genexpr>)
    11554    0.038    0.000    0.244    0.000 ops.py:5291(_colocate_with_for_gradient)
    11418    0.060    0.000    0.270    0.000 base_layer.py:2958(_dedup_weights)
    11352    0.162    0.000    0.166    0.000 enum.py:289(__call__)
    11352    0.004    0.000    0.004    0.000 enum.py:531(__new__)
11338/11258    0.023    0.000    0.550    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    11240    0.206    0.000    0.209    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    11072    0.007    0.000    0.007    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    10965    0.043    0.000    0.106    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
    10965    0.009    0.000    0.115    0.000 tape.py:177(record_operation)
    10964    0.003    0.000    0.003    0.000 {method 'isidentifier' of 'str' objects}
    10964    0.024    0.000    0.194    0.000 inspect.py:2467(__init__)
    10964    0.002    0.000    0.002    0.000 inspect.py:2525(annotation)
    10964    0.002    0.000    0.002    0.000 inspect.py:2529(kind)
    10929    0.006    0.000    0.017    0.000 ops.py:4258(get_name_scope)
    10880    0.013    0.000    0.249    0.000 ops.py:5314(colocate_with)
    10793    0.227    0.000    0.227    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
    10793    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
    10724    0.001    0.000    0.001    0.000 inspect_utils.py:84(<genexpr>)
    10688    0.004    0.000    0.012    0.000 graph_view.py:63(<genexpr>)
    10670    0.002    0.000    0.002    0.000 ops.py:4634(<genexpr>)
    10552    0.005    0.000    0.007    0.000 tensor_shape.py:704(as_dimension)
    10536    0.014    0.000    0.022    0.000 tensor_conversion_registry.py:114(get)
    10500    0.003    0.000    0.003    0.000 ops.py:4575(control_inputs)
    10485    0.015    0.000    0.074    0.000 {method 'join' of 'str' objects}
    10447    0.010    0.000    0.010    0.000 {method '__array__' of 'numpy.ndarray' objects}
    10447    0.008    0.000    0.018    0.000 function.py:2626(_as_ndarray)
10412/8854    0.019    0.000    0.480    0.000 base.py:453(_method_wrapper)
    10395    0.015    0.000    0.030    0.000 ops.py:407(name)
    10323    0.006    0.000    0.006    0.000 {method 'decode' of 'bytes' objects}
    10316    0.005    0.000    0.006    0.000 ops.py:4584(op_in_group)
    10290    0.028    0.000    0.028    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
    10290    0.035    0.000    0.064    0.000 ops.py:2510(_get_attr_type)
    10125    0.015    0.000    0.015    0.000 ops.py:4522(__init__)
    10125    0.029    0.000    0.064    0.000 ops.py:4557(__enter__)
    10125    0.018    0.000    0.063    0.000 ops.py:4567(__exit__)
    10125    0.008    0.000    0.017    0.000 ops.py:4589(_push_control_dependencies_controller)
    10125    0.014    0.000    0.035    0.000 ops.py:4592(_pop_control_dependencies_controller)
    10125    0.014    0.000    0.034    0.000 ops.py:4646(control_dependencies)
    10117    0.004    0.000    0.004    0.000 {built-in method from_iterable}
    10073    0.002    0.000    0.002    0.000 ops.py:757(value_index)
    10061    0.015    0.000    0.031    0.000 tensor_spec.py:90(__eq__)
     9984    0.010    0.000    0.022    0.000 object_identity.py:134(__setitem__)
     9901    0.020    0.000    0.056    0.000 func_graph.py:321(control_dependencies)
     9884    0.005    0.000    0.005    0.000 __init__.py:1614(isEnabledFor)
     9884    0.004    0.000    0.004    0.000 tf_logging.py:93(get_logger)
     9879    0.010    0.000    0.016    0.000 __init__.py:1429(log)
     9879    0.019    0.000    0.039    0.000 tf_logging.py:210(vlog)
     9841    0.049    0.000    3.282    0.000 func_graph.py:644(_capture_helper)
9659/9361    0.019    0.000    0.056    0.000 tracking.py:440(wrapped)
     9644    0.026    0.000    0.113    0.000 ops.py:1039(numpy)
     9596    0.017    0.000    0.017    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
     9566    0.003    0.000    0.003    0.000 function.py:2014(<listcomp>)
     9566    0.033    0.000    0.053    0.000 function.py:2008(captured_inputs)
     9562    0.019    0.000    0.101    0.000 nest.py:1379(flatten_with_tuple_paths)
     9460    0.024    0.000    0.024    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
     9460    0.044    0.000    0.092    0.000 ops.py:616(set_shape)
     9424    0.006    0.000    0.008    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
     9397    0.006    0.000    0.006    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
     9358    0.004    0.000    0.004    0.000 gradients_util.py:604(<genexpr>)
     9249    0.007    0.000    0.026    0.000 control_flow_util.py:107(IsLoopExit)
9240/4760    0.014    0.000    0.022    0.000 data_structures.py:756(__getattribute__)
     9153    0.015    0.000    0.024    0.000 context.py:1831(ensure_initialized)
     9152    0.457    0.000    1.437    0.000 data_structures.py:195(_layers)
     9122    0.015    0.000    0.055    0.000 ops.py:6013(get_name_scope)
     9088    0.007    0.000    0.007    0.000 ag_ctx.py:49(__init__)
     9088    0.012    0.000    0.025    0.000 ag_ctx.py:53(__enter__)
     9088    0.030    0.000    0.067    0.000 ag_ctx.py:61(__exit__)
     9067    0.004    0.000    0.004    0.000 context.py:127(executor_type)
     9067    0.009    0.000    0.009    0.000 context.py:1056(function_call_options)
     9055    0.017    0.000    0.018    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
     9055    0.010    0.000    0.027    0.000 tape.py:220(could_possibly_record)
     9055    0.009    0.000    0.009    0.000 function.py:265(__init__)
     9055    0.002    0.000    0.002    0.000 function.py:268(__enter__)
     9055    0.007    0.000    0.007    0.000 function.py:271(__exit__)
     9055    0.265    0.000  111.373    0.012 function.py:509(call)
9055/8990    0.154    0.000  123.716    0.014 function.py:1850(_call_flat)
     9055    0.123    0.000    0.495    0.000 function.py:2151(_build_call_outputs)
     8980    0.003    0.000    0.003    0.000 trace.py:85(__enter__)
     8980    0.010    0.000    0.010    0.000 trace.py:52(__init__)
     8980    0.004    0.000    0.004    0.000 trace.py:123(__exit__)
     8976    0.006    0.000    0.006    0.000 trace.py:89(set_metadata)
8976/8846    0.168    0.000  129.925    0.015 def_function.py:757(__call__)
8976/8846    0.105    0.000  129.466    0.015 def_function.py:798(_call)
     8976    0.018    0.000    0.024    0.000 function.py:1844(<listcomp>)
     8976    0.058    0.000  121.555    0.014 function.py:1827(_filtered_call)
8956/8851    0.049    0.000  112.146    0.013 function.py:2825(__call__)
     8882    0.003    0.000    0.003    0.000 function.py:223(<genexpr>)
     8874    0.002    0.000    0.002    0.000 object_identity.py:38(unwrapped)
     8834    0.022    0.000    0.160    0.000 ops.py:5202(device)
     8804    0.010    0.000    0.022    0.000 ag_ctx.py:35(control_status_ctx)
     8789    0.011    0.000    0.282    0.000 base_layer.py:2844(<genexpr>)
     8789    0.036    0.000    0.324    0.000 base_layer.py:2835(_gather_children_attribute)
     8732  104.685    0.012  104.685    0.012 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
     8732    0.048    0.000  104.742    0.012 execute.py:33(quick_execute)
     8724    0.006    0.000    0.011    0.000 api.py:153(is_autograph_artifact)
     8710    0.032    0.000    0.071    0.000 def_function.py:1171(__get__)
     8677    0.006    0.000    0.013    0.000 tensor_shape.py:838(ndims)
     8666    0.030    0.000    0.059    0.000 context.py:827(device)
     8666    0.011    0.000    0.011    0.000 context.py:1733(__init__)
     8666    0.046    0.000    0.066    0.000 context.py:1738(__enter__)
     8666    0.032    0.000    0.048    0.000 context.py:1772(__exit__)
     8666    0.022    0.000    0.106    0.000 context.py:2016(device)
     8666    0.010    0.000    0.012    0.000 device.py:45(is_device_spec)
     8650    0.061    0.000    0.273    0.000 api.py:157(tf_convert)
     8646    0.016    0.000    0.020    0.000 func_graph.py:669(add_capture)
     8646    0.052    0.000    3.123    0.000 func_graph.py:1123(_create_substitute_placeholder)
 8640/960    0.070    0.000    3.866    0.004 api.py:273(wrapper)
     8640    0.034    0.000    0.163    0.000 api.py:271(call_with_unspecified_conversion_status)
     8586    0.013    0.000    0.013    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
     8586    0.007    0.000    0.021    0.000 ops.py:772(<listcomp>)
     8586    0.011    0.000    0.048    0.000 ops.py:762(consumers)
     8520    0.038    0.000    0.116    0.000 def_function.py:91(_get_counter)
     8517    0.024    0.000    0.024    0.000 def_function.py:72(called_without_tracing)
     8517    0.044    0.000    0.184    0.000 def_function.py:97(called_without_tracing)
     8427    0.016    0.000    0.020    0.000 {method 'sort' of 'list' objects}
     8348    0.003    0.000    0.005    0.000 ops.py:193(_as_graph_element)
     8320    0.007    0.000    0.081    0.000 gradients_util.py:230(_IsBackpropagatable)
     8236    0.007    0.000    0.052    0.000 distribution_strategy_context.py:179(get_strategy)
     8233    0.004    0.000    0.004    0.000 ops.py:3003(<lambda>)
     8160    0.011    0.000    0.062    0.000 optimizer_v2.py:635(<genexpr>)
     8126    0.023    0.000    0.149    0.000 data_structures.py:208(layers)
     8122    1.001    0.000    1.001    0.000 environment.py:228(<listcomp>)
     8122    1.209    0.000    6.004    0.001 environment.py:221(get_weights)
     8112    0.006    0.000    0.009    0.000 graph_view.py:51(_escape_local_name)
     8072    0.069    0.000    0.079    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
     8072    0.011    0.000    0.138    0.000 backprop.py:174(_record_gradient)
     8051    0.004    0.000    0.004    0.000 reportviews.py:189(__call__)
     8008    0.008    0.000    0.014    0.000 tensor_shape.py:252(is_compatible_with)
     8000    0.016    0.000    0.092    0.000 ops.py:977(__float__)
7940/5305    0.010    0.000    0.013    0.000 tensor_util.py:219(_GetDenseDimensions)
     7828    0.005    0.000    0.011    0.000 base.py:577(_maybe_initialize_trackable)
     7779    0.006    0.000    0.023    0.000 gradients_util.py:845(<genexpr>)
     7720    0.017    0.000    0.050    0.000 tf_utils.py:339(is_symbolic_tensor)
     7712    0.015    0.000    0.066    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
     7712    0.018    0.000    0.308    0.000 distribute_lib.py:2896(colocate_vars_with)
     7696    0.013    0.000    0.067    0.000 distribution_strategy_context.py:199(has_strategy)
     7696    0.007    0.000    0.007    0.000 distribution_strategy_context.py:312(_get_default_strategy)
     7680    0.011    0.000    0.011    0.000 resource_variable_ops.py:573(constraint)
     7680    0.005    0.000    0.005    0.000 distribute_lib.py:242(get_update_replica_id)
     7680    0.006    0.000    0.006    0.000 distribute_lib.py:253(__init__)
     7680    0.011    0.000    0.016    0.000 distribute_lib.py:257(__enter__)
     7680    0.013    0.000    0.013    0.000 distribute_lib.py:261(__exit__)
     7680    0.009    0.000    0.091    0.000 distribute_lib.py:791(scope)
     7680    0.011    0.000    0.011    0.000 distribute_lib.py:1991(_container_strategy)
     7680    0.026    0.000    0.084    0.000 distribute_lib.py:2168(reduce_to)
     7680    0.073    0.000    2.777    0.000 distribute_lib.py:2233(update)
     7680    0.022    0.000    0.068    0.000 distribute_lib.py:2853(__init__)
     7680    0.029    0.000    0.274    0.000 distribute_lib.py:2863(__enter__)
     7680    0.027    0.000    0.126    0.000 distribute_lib.py:2872(__exit__)
     7680    0.014    0.000    0.082    0.000 distribute_lib.py:2892(_scope)
     7680    0.003    0.000    0.003    0.000 distribute_lib.py:2947(_reduce_to)
     7680    0.020    0.000    1.887    0.000 distribute_lib.py:2952(_update)
     7680    0.066    0.000    1.868    0.000 distribute_lib.py:2957(_update_non_slot)
     7680    0.003    0.000    0.003    0.000 distribute_lib.py:2970(_local_results)
     7680    0.079    0.000    1.420    0.000 optimizer_v2.py:591(apply_grad_to_update_var)
     7680    0.010    0.000    0.044    0.000 optimizer_v2.py:621(_assume_mirrored)
     7680    0.028    0.000    0.892    0.000 gen_training_ops.py:1384(resource_apply_adam)
     7680    0.104    0.000    1.210    0.000 adam.py:165(_resource_apply_dense)
     7657    0.005    0.000    0.022    0.000 gradients_util.py:847(<genexpr>)
     7625    0.009    0.000    0.037    0.000 ops.py:3636(as_graph_element)
     7625    0.014    0.000    0.027    0.000 ops.py:3672(_as_graph_element_locked)
     7547    0.028    0.000    0.441    0.000 base_layer.py:1311(trainable_weights)
     7536    0.037    0.000    0.305    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
7486/3270    0.009    0.000    0.029    0.000 data_structures.py:80(wrap_or_unwrap)
7462/2370    0.007    0.000    0.058    0.000 data_structures.py:103(sticky_attribute_assignment)
     7422    0.042    0.000    0.146    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
     7266    0.009    0.000    0.086    0.000 ops.py:3264(<listcomp>)
     7266    0.007    0.000    0.042    0.000 ops.py:3779(get_operation_by_name)
7260/5130    0.015    0.000    0.085    0.000 training.py:322(__setattr__)
 7256/112    0.007    0.000    0.013    0.000 json_utils.py:47(_encode_tuple)
     7250    0.022    0.000    0.034    0.000 gradients_util.py:769(_SetGrad)
     7016    0.006    0.000    0.027    0.000 _collections_abc.py:664(__contains__)
     6796    0.004    0.000    0.005    0.000 tensor_shape.py:1169(<genexpr>)
     6796    0.011    0.000    0.011    0.000 func_graph.py:743(<listcomp>)
     6796    0.011    0.000    0.024    0.000 func_graph.py:740(internal_captures)
     6758    0.003    0.000    0.007    0.000 nested_structure_coder.py:157(_is_named_tuple)
     6643    0.001    0.000    0.001    0.000 {method 'extend' of 'collections.deque' objects}
     6598    0.003    0.000    0.003    0.000 function.py:501(name)
     6573    0.076    0.000    0.126    0.000 gradients_util.py:460(_Consumers)
     6534    0.008    0.000    0.018    0.000 ops.py:3297(_is_function)
     6496    0.003    0.000    0.004    0.000 def_function.py:1036(<genexpr>)
     6347    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
6334/5926    0.022    0.000    7.061    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
6334/6134    0.076    0.000    4.830    0.001 function.py:2870(_get_concrete_function_garbage_collected)
6326/5918    0.010    0.000    6.969    0.001 def_function.py:1091(get_concrete_function)
     6326    0.002    0.000    0.002    0.000 function.py:3780(release)
     6240    0.002    0.000    0.002    0.000 data_structures.py:431(_non_append_mutation)
     6240    0.002    0.000    0.002    0.000 data_structures.py:447(_external_modification)
6216/1404    0.160    0.000    5.376    0.004 save_impl.py:546(get_concrete_function)
     6188    0.007    0.000    0.015    0.000 tensor_shape.py:1180(as_list)
     6150    0.006    0.000    0.008    0.000 tensor_shape.py:1191(<listcomp>)
     5917    0.003    0.000    0.003    0.000 traceable_stack.py:83(__init__)
     5911    0.031    0.000    0.052    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
     5885    0.007    0.000    0.018    0.000 ops.py:1922(<listcomp>)
     5781    0.025    0.000    2.257    0.000 array_ops.py:244(identity)
     5781    0.030    0.000    2.045    0.000 gen_array_ops.py:3973(identity)
     5679    0.005    0.000    0.007    0.000 ops.py:517(<listcomp>)
     5679    0.015    0.000    0.080    0.000 ops.py:515(_shape_as_list)
     5679    0.006    0.000    0.086    0.000 ops.py:521(_shape_tuple)
     5602    0.003    0.000    0.003    0.000 ops.py:4054(_original_op)
     5552    0.009    0.000    0.713    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
     5548    0.002    0.000    0.003    0.000 module.py:302(_is_module)
     5496    0.006    0.000    0.043    0.000 base.py:498(no_automatic_dependency_tracking_scope)
     5496    0.004    0.000    0.013    0.000 base.py:549(_setattr_tracking)
     5350    0.026    0.000    0.032    0.000 tensor_util.py:339(_is_array_like)
     5350    0.157    0.000    0.701    0.000 tensor_util.py:360(make_tensor_proto)
     5319    0.006    0.000    0.019    0.000 context.py:2006(eager_mode)
     5305    0.010    0.000    0.105    0.000 tensor_util.py:309(_AssertCompatible)
     5242    0.006    0.000    0.006    0.000 fromnumeric.py:74(<dictcomp>)
     5242    0.031    0.000    0.162    0.000 fromnumeric.py:73(_wrapreduction)
     5236    0.004    0.000    0.004    0.000 resource_variable_ops.py:588(trainable)
 5140/304    0.011    0.000    0.085    0.000 generic_utils.py:235(serialize_keras_object)
     5118    0.003    0.000    0.003    0.000 context.py:808(scope_name)
     5111    0.002    0.000    0.006    0.000 _asarray.py:16(asarray)
     5078    0.005    0.000    0.016    0.000 control_flow_util.py:92(IsSwitch)
     5044    0.016    0.000    0.101    0.000 resource_variable_ops.py:329(variable_accessed)
     4990    0.007    0.000    0.007    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
     4902    0.002    0.000    0.002    0.000 tensor_spec.py:63(shape)
     4848    0.002    0.000    0.002    0.000 base.py:649(_checkpoint_dependencies)
     4803    0.004    0.000    0.057    0.000 def_function.py:1042(<genexpr>)
     4736    0.006    0.000    0.082    0.000 graph_view.py:158(list_dependencies)
     4736    0.005    0.000    1.162    0.000 save.py:137(list_extra_dependencies)
     4724    0.003    0.000    0.005    0.000 object_identity.py:227(__iter__)
     4709    0.004    0.000    0.008    0.000 op_def_library.py:416(<genexpr>)
     4709    0.003    0.000    0.009    0.000 op_def_library.py:532(<genexpr>)
     4679    0.005    0.000    0.018    0.000 gradients_util.py:302(_IsPartitionedCall)
     4679    0.019    0.000    0.097    0.000 gradients_util.py:731(_UpdatePendingAndEnqueueReady)
     4679    0.003    0.000    0.003    0.000 gradients_util.py:816(_GetGrads)
     4679    0.027    0.000    1.029    0.000 gradients_util.py:911(_AggregatedGrads)
     4602    0.002    0.000    0.004    0.000 function.py:730(<genexpr>)
     4528    0.009    0.000    0.019    0.000 weakref.py:244(values)
     4460    0.016    0.000    0.128    0.000 ops.py:5744(executing_eagerly_outside_functions)
     4408    0.004    0.000    0.009    0.000 training.py:328(<genexpr>)
     4396    0.004    0.000    0.007    0.000 nest.py:96(_sorted)
     4340    0.002    0.000    0.002    0.000 base.py:984(_list_extra_dependencies_for_serialization)
     4320    0.006    0.000    0.068    0.000 _asarray.py:88(asanyarray)
 4316/760    0.014    0.000    0.081    0.000 nested_structure_coder.py:78(_map_structure)
     4316    0.002    0.000    0.003    0.000 nested_structure_coder.py:133(can_encode)
     4285    0.006    0.000    0.006    0.000 {built-in method _abc._abc_subclasscheck}
     4285    0.002    0.000    0.009    0.000 abc.py:141(__subclasscheck__)
     4282    0.002    0.000    0.002    0.000 gradients_util.py:774(<listcomp>)
     4280    0.031    0.000    0.032    0.000 _methods.py:50(_count_reduce_items)
     4240    0.002    0.000    0.002    0.000 fromnumeric.py:3227(_mean_dispatcher)
     4240    0.050    0.000    0.301    0.000 fromnumeric.py:3231(mean)
     4240    0.064    0.000    0.251    0.000 _methods.py:134(_mean)
     4240    0.015    0.000    0.328    0.000 <__array_function__ internals>:2(mean)
     4228    0.005    0.000    0.005    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     4228    0.012    0.000    0.020    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
     4228    0.007    0.000    0.028    0.000 tensor_util.py:194(GetNumpyAppendFn)
     4215    0.003    0.000    0.004    0.000 inspect.py:80(ismethod)
     4127    0.007    0.000    0.007    0.000 {method 'copy' of 'numpy.ndarray' objects}
     4080    0.036    0.000    2.238    0.001 environment.py:230(get_state)
     4041    0.013    0.000    0.013    0.000 hash_weights.py:37(__init__)
     4041   11.196    0.003   80.145    0.020 environment.py:354(_get_HashWeights)
     4040    0.002    0.000    0.002    0.000 fromnumeric.py:2546(_amax_dispatcher)
     4040    0.015    0.000    0.145    0.000 fromnumeric.py:2551(amax)
     4040    0.009    0.000    0.163    0.000 <__array_function__ internals>:2(amax)
     4040    0.556    0.000   39.175    0.010 base.py:83(run)
     4040    0.035    0.000   47.882    0.012 environment.py:105(_calculate_current_bandwidth)
     4040    0.711    0.000    2.620    0.001 environment.py:314(_normalize_traffic)
     4040    0.810    0.000    8.673    0.002 environment.py:318(_get_link_traffic)
     4040    0.014    0.000    0.178    0.000 environment.py:327(compute_reward_measure)
     4002    0.004    0.000    0.005    0.000 utils.py:223(set_training_arg)
     4000    0.050    0.000    0.091    0.000 environment.py:243(update_weights)
     4000    0.174    0.000  132.007    0.033 environment.py:270(step)
     4000    0.014    0.000    0.189    0.000 environment.py:344(_compute_reward)
3994/1846    0.006    0.000    0.024    0.000 tracking.py:80(__setattr__)
     3974    0.004    0.000    0.004    0.000 dtypes.py:103(as_numpy_dtype)
     3944    0.002    0.000    0.002    0.000 math_ops.py:3500(<genexpr>)
     3902    0.002    0.000    0.007    0.000 nested_structure_coder.py:153(_is_tuple)
     3902    0.002    0.000    0.009    0.000 nested_structure_coder.py:176(can_encode)
     3894    0.002    0.000    0.002    0.000 func_graph.py:97(<genexpr>)
     3885    0.002    0.000    0.002    0.000 ops.py:5066(_colocation_stack)
     3856    0.017    0.000    0.017    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
     3840    0.002    0.000    0.002    0.000 object_identity.py:78(unwrapped)
     3792    0.022    0.000    0.022    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
     3792    0.006    0.000    0.007    0.000 custom_gradient.py:77(<listcomp>)
     3792    0.005    0.000    0.012    0.000 custom_gradient.py:78(<listcomp>)
     3792    0.016    0.000    0.016    0.000 custom_gradient.py:75(<listcomp>)
     3780    0.005    0.000    0.068    0.000 ops.py:4275(_colocate_with_for_gradient)
     3780    0.014    0.000    0.052    0.000 ops.py:4288(colocate_with)
     3768    0.015    0.000    0.092    0.000 backend.py:429(deprecated_internal_set_learning_phase)
3764/3612    0.015    0.000    4.566    0.001 save_impl.py:415(trace_with_training)
     3724    0.001    0.000    0.001    0.000 reportviews.py:559(<genexpr>)
     3724    0.001    0.000    0.001    0.000 reportviews.py:560(<genexpr>)
     3648    0.002    0.000    0.002    0.000 function.py:763(forward)
     3616    0.004    0.000    0.012    0.000 object_identity.py:220(_wrap_key)
     3616    0.006    0.000    0.008    0.000 object_identity.py:75(__init__)
     3608    0.007    0.000    0.048    0.000 tensor_util.py:263(inner)
     3590    0.024    0.000    0.024    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
     3590    0.003    0.000    0.027    0.000 nest.py:357(assert_same_structure)
     3587    0.020    0.000    0.020    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
     3489    0.002    0.000    0.002    0.000 layer_utils.py:273(<listcomp>)
3489/1034    0.023    0.000    1.823    0.002 layer_utils.py:254(gather_trainable_weights)
     3469    0.006    0.000    0.007    0.000 ops.py:6583(__init__)
     3467    0.017    0.000    0.041    0.000 ops.py:6601(__enter__)
     3467    0.007    0.000    0.016    0.000 ops.py:6635(__exit__)
     3458    0.003    0.000    0.004    0.000 op_def_library.py:148(_MakeInt)
     3379    0.001    0.000    0.001    0.000 tensor_shape.py:790(_v2_behavior)
     3372    0.003    0.000    0.003    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
     3284    0.001    0.000    0.002    0.000 nested_structure_coder.py:199(can_encode)
     3262    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
     3262    0.002    0.000    0.005    0.000 ops.py:2062(device)
     3259    0.002    0.000    0.002    0.000 function.py:1974(structured_input_signature)
     3200    0.005    0.000    0.014    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
     3200    0.016    0.000    0.900    0.000 gen_resource_variable_ops.py:452(read_variable_op)
     3136    0.015    0.000    0.899    0.000 resource_variable_ops.py:646(read_and_set_handle)
     3136    0.014    0.000    0.986    0.000 resource_variable_ops.py:643(_read_variable_op)
     3120    0.005    0.000    0.007    0.000 data_structures.py:479(_check_external_modification)
     3095    0.009    0.000    0.031    0.000 tensor_spec.py:39(__init__)
     3080    0.006    0.000    0.015    0.000 data_structures.py:497(_checkpoint_dependencies)
     3068    0.017    0.000    1.051    0.000 resource_variable_ops.py:550(value)
     3000    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
     3000    0.003    0.000    0.008    0.000 ops.py:2527(_get_attr_int)
     2990    0.010    0.000    0.025    0.000 tensor_shape.py:1074(is_compatible_with)
     2965    0.002    0.000    0.002    0.000 {method 'rstrip' of 'str' objects}
     2960    0.001    0.000    0.001    0.000 {built-in method builtins.pow}
     2910    0.003    0.000    0.004    0.000 ops.py:3972(get_collection_ref)
     2906    0.003    0.000    0.004    0.000 gradients_util.py:136(_AsList)
     2860    0.002    0.000    0.003    0.000 base.py:543(_setattr_tracking)
     2856    0.001    0.000    0.004    0.000 nested_structure_coder.py:226(can_encode)
2854/1784    0.015    0.000    0.274    0.000 inspect.py:2198(_signature_from_callable)
     2830    0.002    0.000    0.002    0.000 execute.py:184(make_bool)
     2826    0.002    0.000    0.002    0.000 op_def_library.py:166(_MakeBool)
     2816    0.134    0.000    0.134    0.000 {built-in method builtins.dir}
     2801    0.012    0.000    0.166    0.000 ops.py:2642(get_gradient_function)
     2801    0.007    0.000    0.017    0.000 gradients_util.py:237(_VerifyGeneratedGradients)
 2801/242    0.012    0.000   15.490    0.064 gradients_util.py:321(_MaybeCompile)
 2801/242    0.007    0.000   15.478    0.064 gradients_util.py:669(<lambda>)
     2801    0.017    0.000    0.105    0.000 gradients_util.py:832(_LogOpGradients)
     2780    0.001    0.000    0.001    0.000 base_layer.py:1218(name)
     2750    0.004    0.000    0.006    0.000 tensor_shape.py:866(__getitem__)
     2726    0.001    0.000    0.001    0.000 nested_structure_coder.py:257(can_encode)
     2726    0.001    0.000    0.002    0.000 nested_structure_coder.py:280(can_encode)
     2726    0.001    0.000    0.001    0.000 nested_structure_coder.py:307(can_encode)
     2720    0.001    0.000    0.002    0.000 object_identity.py:143(__iter__)
     2719    0.001    0.000    0.001    0.000 context.py:803(scope_name)
     2712    0.004    0.000    0.012    0.000 tensor_shape.py:1166(is_fully_defined)
     2704    0.003    0.000    0.018    0.000 graph_view.py:61(_object_prefix_from_path)
     2692    0.009    0.000    0.054    0.000 function.py:211(is_same_structure)
     2685    0.002    0.000    0.002    0.000 auto_control_deps_utils.py:54(<listcomp>)
     2685    0.008    0.000    0.032    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
     2656    0.002    0.000    0.002    0.000 base_layer.py:2954(_eager_losses)
     2640    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
     2640    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
     2640    0.011    0.000    0.031    0.000 tape.py:104(variable_accessed)
     2640    0.003    0.000    0.012    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
     2640    0.001    0.000    0.001    0.000 distribute_lib.py:2973(value_container)
     2592    0.024    0.000    0.157    0.000 math_ops.py:866(cast)
     2588    0.006    0.000    1.036    0.000 resource_variable_ops.py:1317(_dense_var_to_tensor)
     2588    0.005    0.000    1.041    0.000 resource_variable_ops.py:1908(_dense_var_to_tensor)
     2564    0.001    0.000    0.001    0.000 gradients_util.py:966(<genexpr>)
     2559    0.003    0.000    0.004    0.000 ops.py:6625(_restore_name_scope)
     2512    0.008    0.000    0.037    0.000 func_graph.py:265(watch_variable)
     2511    0.018    0.000    0.018    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
     2511    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
     2511    0.009    0.000    0.054    0.000 ops.py:2422(_set_attr)
     2511    0.004    0.000    0.023    0.000 ops.py:2431(_set_attr_with_buf)
     2502    0.004    0.000    0.019    0.000 data_structures.py:173(_track_value)
     2502    0.001    0.000    0.001    0.000 data_structures.py:330(_name_element)
     2502    0.004    0.000    0.029    0.000 data_structures.py:635(_track_value)
     2502    0.001    0.000    0.002    0.000 data_structures.py:1033(_is_function)
2491/1018    0.019    0.000    2.704    0.003 training.py:1890(trainable_weights)
     2472    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
     2466    0.002    0.000    0.005    0.000 base_layer.py:2942(_eager_losses)
     2465    0.001    0.000    0.006    0.000 tensor_shape.py:268(assert_is_compatible_with)
     2465    0.004    0.000    0.015    0.000 tensor_shape.py:282(merge_with)
     2460    0.005    0.000    0.012    0.000 execute.py:191(make_type)
     2448    0.003    0.000    0.007    0.000 auto_control_deps_utils.py:66(<listcomp>)
     2448    0.001    0.000    0.002    0.000 base.py:951(_gather_saveables_for_checkpoint)
     2445    0.013    0.000    0.135    0.000 func_graph.py:82(encode_arg)
     2437    0.003    0.000    0.005    0.000 function.py:1959(name)
     2426    0.006    0.000    0.006    0.000 function.py:484(<genexpr>)
     2423    0.000    0.000    0.000    0.000 gradients_util.py:102(<genexpr>)
     2422    0.001    0.000    0.001    0.000 converter.py:170(as_tuple)
     2416    0.002    0.000    0.003    0.000 base_layer_utils.py:399(call_context)
     2402    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
     2359    0.004    0.000    0.012    0.000 default_gradient.py:38(shape_and_dtype)
     2339    0.003    0.000    0.005    0.000 ops.py:1160(shape)
     2276    0.001    0.000    0.021    0.000 function.py:1529(<genexpr>)
2238/1028    0.001    0.000    0.032    0.000 utils.py:127(<genexpr>)
     2195    0.002    0.000    0.885    0.000 constant_op.py:335(_constant_tensor_conversion_function)
     2195    0.002    0.000    0.008    0.000 func_graph.py:1142(_get_composite_tensor_spec)
     2184    0.012    0.000    0.687    0.000 math_ops.py:1122(binary_op_wrapper)
     2168    0.002    0.000    0.004    0.000 auto_control_deps_utils.py:105(<genexpr>)
     2140    0.004    0.000    0.015    0.000 sequential.py:510(_assert_weights_created)
     2136    0.001    0.000    0.001    0.000 data_structures.py:140(__init__)
     2114    0.006    0.000    0.148    0.000 gen_math_ops.py:10433(sub)
     2114    0.004    0.000    0.152    0.000 math_ops.py:524(subtract)
     2095    0.001    0.000    0.002    0.000 func_graph.py:489(<genexpr>)
     2080    0.001    0.000    0.001    0.000 nested_structure_coder.py:170(<genexpr>)
     2062    0.009    0.000    0.042    0.000 tensor_shape.py:926(merge_with)
     2050    0.002    0.000    0.002    0.000 execute.py:166(make_int)
     2040    0.001    0.000    0.001    0.000 tf2.py:42(enabled)
     2032    0.004    0.000    3.758    0.002 save.py:141(list_functions)
     2022    0.001    0.000    0.003    0.000 base_layer.py:2697(_maybe_create_attribute)
     2015    0.001    0.000    0.001    0.000 tensor_spec.py:73(name)
     2003    0.005    0.000    0.062    0.000 array_ops.py:1479(_should_not_autopack)
     2003    0.003    0.000    0.188    0.000 array_ops.py:1489(_autopacking_conversion_function)
     1982    0.001    0.000    0.002    0.000 function.py:1200(<genexpr>)
     1976    0.001    0.000    0.004    0.000 ops.py:416(device)
     1970    0.021    0.000    0.021    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
     1970    0.005    0.000    0.008    0.000 ops.py:1794(<listcomp>)
     1967    0.015    0.000    0.168    0.000 math_ops.py:1153(r_binary_op_wrapper)
     1967    0.002    0.000    0.004    0.000 gradients_util.py:793(_GetGrad)
     1936    0.012    0.000    0.012    0.000 {built-in method FromString}
     1936    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
     1936    0.009    0.000    0.035    0.000 resource_variable_ops.py:64(get_resource_handle_data)
     1928    0.001    0.000    0.002    0.000 variables.py:22(ld)
     1916    0.008    0.000    0.341    0.000 tf_inspect.py:238(getfullargspec)
     1908    0.003    0.000    0.003    0.000 ops.py:1217(graph)
     1890    0.001    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
     1884    0.001    0.000    0.001    0.000 generic_utils.py:167(get_registered_name)
     1828    0.000    0.000    0.000    0.000 policy.py:453(name)
     1785    0.006    0.000    0.006    0.000 {method 'astype' of 'numpy.ndarray' objects}
     1784    0.001    0.000    0.001    0.000 {method 'values' of 'mappingproxy' objects}
     1784    0.033    0.000    0.320    0.000 inspect.py:1089(getfullargspec)
     1784    0.036    0.000    0.256    0.000 inspect.py:2117(_signature_from_function)
     1784    0.014    0.000    0.021    0.000 inspect.py:2750(__init__)
     1784    0.000    0.000    0.000    0.000 inspect.py:2835(parameters)
     1784    0.000    0.000    0.000    0.000 inspect.py:2839(return_annotation)
     1772    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
 1749/899    0.004    0.000    1.837    0.002 while_v2.py:971(capture)
     1738    0.002    0.000    0.002    0.000 {method 'find' of 'str' objects}
 1732/112    0.003    0.000    0.012    0.000 json_utils.py:54(<dictcomp>)
     1720    0.000    0.000    0.001    0.000 nested_structure_coder.py:353(can_encode)
 1712/437    0.005    0.000    2.057    0.005 while_v2.py:916(_create_op_internal)
     1704    0.001    0.000    0.001    0.000 object_identity.py:125(__init__)
     1697    0.007    0.000    0.011    0.000 tensor_util.py:281(<listcomp>)
     1697    0.003    0.000    0.047    0.000 tensor_util.py:280(_check_not_tensor)
     1694    0.001    0.000    0.001    0.000 numeric.py:2283(_array_equal_dispatcher)
     1694    0.019    0.000    0.043    0.000 numeric.py:2287(array_equal)
     1694    0.003    0.000    0.049    0.000 <__array_function__ internals>:2(array_equal)
     1678    0.002    0.000    0.018    0.000 {method 'all' of 'numpy.ndarray' objects}
     1678    0.001    0.000    0.016    0.000 _methods.py:47(_all)
     1676    0.001    0.000    0.002    0.000 base_layer.py:932(<genexpr>)
     1676    0.001    0.000    0.001    0.000 base_layer.py:3234(<genexpr>)
     1666    0.005    0.000    0.007    0.000 os.py:676(__getitem__)
     1666    0.002    0.000    0.003    0.000 os.py:754(encode)
     1666    0.002    0.000    0.012    0.000 os.py:772(getenv)
     1666    0.003    0.000    0.015    0.000 ag_logging.py:114(get_verbosity)
     1666    0.001    0.000    0.016    0.000 ag_logging.py:121(has_verbosity)
     1630    0.004    0.000    0.819    0.001 base_layer.py:1232(dynamic)
     1624    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
     1624    0.001    0.000    0.004    0.000 ops.py:2519(_get_attr_bool)
     1619    0.001    0.000    0.017    0.000 ag_logging.py:138(log)
     1616    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
     1616    0.002    0.000    0.003    0.000 _weakrefset.py:20(__enter__)
     1616    0.004    0.000    0.006    0.000 _weakrefset.py:26(__exit__)
     1608    0.003    0.000    0.017    0.000 base_layer.py:2690(_obj_reference_counts)
     1606    0.001    0.000    0.001    0.000 tensor_shape.py:862(<genexpr>)
     1603    0.003    0.000    0.004    0.000 {method 'format' of 'str' objects}
     1564    0.004    0.000    0.080    0.000 utils.py:116(list_all_layers)
     1556    0.001    0.000    0.001    0.000 func_graph.py:478(deref)
     1554    0.005    0.000    0.051    0.000 training.py:2361(layers)
     1544    0.006    0.000    0.006    0.000 ops.py:3761(get_operations)
     1524    0.001    0.000    0.001    0.000 nested_structure_coder.py:376(can_encode)
     1516    0.001    0.000    0.002    0.000 base_layer.py:2515(_call_arg_was_passed)
     1514    0.001    0.000    0.001    0.000 weakref.py:125(_commit_removals)
1514/1348    0.011    0.000    5.233    0.004 save_impl.py:401(add_trace)
     1485    0.010    0.000    0.022    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
     1476    0.001    0.000    0.003    0.000 func_graph.py:1023(<genexpr>)
     1470    0.003    0.000    0.012    0.000 tf_inspect.py:390(ismethod)
     1468    0.008    0.000    0.015    0.000 function.py:2748(all_values)
     1460    0.001    0.000    0.001    0.000 base_layer.py:1265(input_spec)
     1460    0.001    0.000    0.001    0.000 base_layer.py:2468(<genexpr>)
     1456    0.004    0.000    0.023    0.000 sequential.py:144(layers)
     1450    0.002    0.000    0.020    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
     1440    0.003    0.000    0.006    0.000 resource_variable_ops.py:508(graph)
     1440    0.009    0.000    0.039    0.000 optimizer_v2.py:673(_get_hyper)
     1435    0.012    0.000    0.323    0.000 ops.py:1523(internal_convert_n_to_tensor)
     1435    0.002    0.000    0.002    0.000 op_def_library.py:447(<listcomp>)
     1408    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
     1382    0.003    0.000    0.006    0.000 tensor_shape.py:988(assert_same_rank)
     1380    0.006    0.000    0.837    0.001 math_ops.py:3458(add_n)
     1380    0.001    0.000    0.001    0.000 functional.py:504(<genexpr>)
     1351    0.001    0.000    0.001    0.000 memory.py:24(dismantle_ordered_dict)
 1328/418    0.004    0.000    0.074    0.000 utils.py:124(list_all_layers_and_sublayers)
     1310    0.001    0.000    0.001    0.000 keras_tensor.py:43(keras_tensors_enabled)
     1308    0.002    0.000    0.004    0.000 base_layer_utils.py:441(enter)
     1308    0.001    0.000    0.001    0.000 base_layer_utils.py:503(__init__)
     1308    0.003    0.000    0.006    0.000 base_layer_utils.py:508(__enter__)
     1308    0.002    0.000    0.002    0.000 base_layer_utils.py:524(__exit__)
     1282    0.015    0.000    1.560    0.001 gen_math_ops.py:5591(mat_mul)
     1253    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap>:1009(_handle_fromlist)
     1248    0.000    0.000    0.000    0.000 device_spec.py:431(to_string)
     1248    0.003    0.000    0.005    0.000 ops.py:5175(__init__)
     1248    0.001    0.000    0.002    0.000 ops.py:5185(__enter__)
     1248    0.001    0.000    0.001    0.000 ops.py:5193(__exit__)
     1247    0.004    0.000    0.511    0.000 func_graph.py:930(convert)
     1242    0.003    0.000    0.037    0.000 base_layer.py:1326(non_trainable_weights)
     1224    0.001    0.000    0.002    0.000 saveable_object_util.py:365(trace_save_restore_functions)
     1216    0.001    0.000    0.002    0.000 def_function.py:911(input_signature)
     1214    0.418    0.000    0.418    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
     1214    0.008    0.000    0.431    0.000 ops.py:3319(_add_function)
     1202    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
     1202    0.003    0.000    0.035    0.000 fromnumeric.py:2843(prod)
     1202    0.002    0.000    0.040    0.000 <__array_function__ internals>:2(prod)
     1156    0.000    0.000    0.000    0.000 base.py:662(_deferred_dependencies)
     1152    0.001    0.000    0.003    0.000 resource_variable_ops.py:246(_handle_graph)
     1134    0.002    0.000    0.137    0.000 func_graph.py:130(<listcomp>)
     1134    0.004    0.000    0.189    0.000 func_graph.py:69(convert_structure_to_signature)
     1111    0.003    0.000    0.003    0.000 math_ops.py:3849(conj)
     1096    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
     1094    0.001    0.000    0.001    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
     1082    0.002    0.000    2.701    0.002 base_layer.py:2247(trainable_variables)
     1081    0.011    0.000    0.032    0.000 ops.py:6937(set_int_list_attr)
     1073    0.004    0.000    0.030    0.000 tensor_util.py:1036(maybe_set_static_shape)
     1070    0.001    0.000    0.001    0.000 ops.py:4888(_override_gradient_function)
     1070    0.001    0.000    0.001    0.000 function.py:2067(_get_gradient_function)
     1058    0.000    0.000    0.000    0.000 function.py:2447(fullargspec)
     1056    0.000    0.000    0.000    0.000 tensor_shape.py:235(__int__)
     1044    0.002    0.000    0.499    0.000 array_ops.py:1328(stack)
     1041    0.001    0.000    0.003    0.000 __init__.py:403(_make)
     1037    0.001    0.000    0.007    0.000 ops.py:1602(convert_to_tensor_or_composite)
     1037    0.002    0.000    0.006    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
     1026    0.002    0.000    0.002    0.000 data_structures.py:165(trainable)
     1025    0.001    0.000    0.002    0.000 traceable_stack.py:131(copy)
     1020    0.005    0.000    0.376    0.000 gen_math_ops.py:6143(mul)
     1018    0.004    0.000    0.500    0.000 auto_control_deps.py:182(mark_as_return)
     1016    0.000    0.000    0.001    0.000 nested_structure_coder.py:400(can_encode)
     1010    0.006    0.000    0.806    0.001 training.py:2425(_assert_weights_created)
     1004    0.001    0.000    0.001    0.000 base.py:677(_lookup_dependency)
     1004    0.004    0.000    0.028    0.000 base.py:800(_track_trackable)
      998    0.006    0.000    1.331    0.001 data_structures.py:212(trainable_weights)
  986/772    0.003    0.000    0.053    0.000 tensor_util.py:804(constant_value)
      980    0.003    0.000    0.016    0.000 base.py:854(_handle_deferred_dependencies)
      975    0.012    0.000    0.026    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
      975    0.004    0.000    0.030    0.000 traceable_stack.py:92(push_obj)
      975    0.001    0.000    0.001    0.000 traceable_stack.py:111(pop_obj)
      964    0.002    0.000    0.007    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
      964    0.003    0.000    0.007    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
      960    0.002    0.000    0.016    0.000 gen_math_ops.py:6630(_pow)
      960    0.005    0.000    0.026    0.000 math_ops.py:611(pow)
      960    0.001    0.000    0.001    0.000 resource_variable_ops.py:460(_assign_dependencies)
      960    0.001    0.000    0.001    0.000 distribution_strategy_context.py:42(__init__)
      960    0.002    0.000    0.003    0.000 distribution_strategy_context.py:50(__init__)
      960    0.002    0.000    0.012    0.000 distribution_strategy_context.py:90(get_replica_context)
      960    0.001    0.000    0.008    0.000 distribute_lib.py:325(require_replica_context)
      960    0.007    0.000    3.942    0.004 distribute_lib.py:2683(merge_call)
      960    0.007    0.000    3.890    0.004 distribute_lib.py:2717(_merge_call)
      960    0.002    0.000    0.005    0.000 optimizer_v2.py:826(iterations)
      960    0.013    0.000    0.016    0.000 optimizer_v2.py:1256(_filter_grads)
      944    0.003    0.000    0.007    0.000 function.py:361(_enclosing_xla_context)
      936    0.010    0.000    0.459    0.000 array_ops.py:631(shape_internal)
      930    0.002    0.000    0.003    0.000 base_layer_utils.py:541(is_subclassed)
      930    0.010    0.000    0.030    0.000 input_spec.py:132(assert_input_compatibility)
      918    0.000    0.000    0.007    0.000 graph.py:1768(<genexpr>)
      918    0.002    0.000    0.006    0.000 reportviews.py:553(__iter__)
      912    0.000    0.000    0.000    0.000 device_spec.py:38(_as_int_or_none)
      910    0.002    0.000    0.002    0.000 __init__.py:426(_asdict)
      908    0.002    0.000    0.303    0.000 math_ops.py:463(multiply)
      902    0.001    0.000    0.003    0.000 tensor_shape.py:1238(unknown_shape)
      902    0.003    0.000    0.307    0.000 math_ops.py:1450(_mul_dispatch)
      897    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
      894    0.000    0.000    0.000    0.000 function.py:923(<genexpr>)
      894    0.001    0.000    0.001    0.000 base_layer_utils.py:475(training)
  890/392    0.026    0.000    9.716    0.025 base_layer.py:875(__call__)
      890    0.003    0.000    0.009    0.000 base_layer.py:2395(_name_scope)
      890    0.003    0.000    0.005    0.000 base_layer.py:2495(_get_input_masks)
      890    0.001    0.000    0.001    0.000 base_layer.py:2968(_split_out_first_arg)
      890    0.005    0.000    0.018    0.000 base_layer.py:3208(_in_functional_construction_mode)
      888    0.002    0.000    0.063    0.000 base_layer.py:1347(weights)
      886    0.004    0.000    0.010    0.000 base_layer.py:2457(_set_mask_metadata)
      886    0.001    0.000    0.001    0.000 base_layer.py:2505(<listcomp>)
      884    0.001    0.000    0.003    0.000 variable_scope.py:1202(set_use_resource)
      884    0.004    0.000    0.015    0.000 func_graph.py:1061(check_mutation)
      884    0.025    0.000    0.621    0.001 func_graph.py:1148(_get_defun_inputs)
      883    0.006    0.000    0.445    0.001 function.py:489(add_to_graph)
      878    0.001    0.000    0.003    0.000 execute.py:177(make_str)
      878    0.001    0.000    0.003    0.000 op_def_library.py:159(_MakeStr)
      864    0.004    0.000    0.005    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
  864/720    0.005    0.000    0.252    0.000 variables.py:258(__call__)
      858    0.004    0.000    0.061    0.000 ops.py:2013(colocation_groups)
  856/312    0.000    0.000    0.000    0.000 tensor_util.py:229(_FlattenToStrings)
      856    0.004    0.000    0.012    0.000 cache.py:43(has)
      850    0.002    0.000    0.009    0.000 base_layer_utils.py:310(is_in_keras_graph)
      850    0.002    0.000    0.007    0.000 base_layer_utils.py:490(in_keras_graph)
      850    0.002    0.000    0.012    0.000 control_flow_util_v2.py:220(clear_control_inputs)
      848    0.001    0.000    0.002    0.000 converter.py:174(__hash__)
      846    0.001    0.000    0.002    0.000 ops.py:4596(_current_control_dependencies)
      840    0.000    0.000    0.000    0.000 function.py:3760(__init__)
      840    0.008    0.000    0.021    0.000 function.py:3763(__del__)
      840    0.001    0.000    0.003    0.000 data_structures.py:818(_dirty)
      838    0.002    0.000    0.013    0.000 base_layer.py:1157(_set_training_mode)
      838    0.001    0.000    0.004    0.000 base_layer.py:1200(_autographed_call)
      828    0.001    0.000    0.002    0.000 cache.py:92(_get_key)
      823    0.001    0.000    0.001    0.000 function.py:2421(<dictcomp>)
      823    0.000    0.000    0.000    0.000 function.py:2427(<dictcomp>)
      823    0.006    0.000    0.008    0.000 function.py:2388(__init__)
      810    0.007    0.000    0.330    0.000 save.py:725(_write_object_proto)
   809/36    0.007    0.000   21.267    0.591 api.py:417(converted_call)
      809    0.001    0.000    0.013    0.000 conversion.py:234(is_in_whitelist_cache)
      807    0.001    0.000    0.401    0.000 array_ops.py:604(shape)
      802    0.000    0.000    0.000    0.000 function.py:2475(arg_names)
      798    0.001    0.000    0.001    0.000 tensor_shape.py:843(__len__)
      792    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
      787    0.001    0.000    0.002    0.000 converter.py:177(__eq__)
      778    0.001    0.000    0.001    0.000 base_serialization.py:33(__init__)
      776    0.003    0.000    0.015    0.000 base_layer.py:2714(__delattr__)
      773    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
      770    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
      767    0.000    0.000    0.000    0.000 array_grad.py:735(_IdGrad)
      760    0.002    0.000    0.002    0.000 nested_structure_coder.py:72(<listcomp>)
      760    0.001    0.000    0.003    0.000 nested_structure_coder.py:70(_get_encoders)
      760    0.001    0.000    0.085    0.000 nested_structure_coder.py:86(encode_structure)
  754/421    0.002    0.000   21.220    0.050 api.py:330(_call_unconverted)
      741    0.001    0.000    0.002    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
      736    0.003    0.000    0.007    0.000 base_layer.py:2312(_maybe_cast_inputs)
      734    0.004    0.000    0.034    0.000 def_function.py:1009(_list_all_concrete_functions)
      734    0.012    0.000    4.343    0.006 def_function.py:1024(_list_all_concrete_functions_for_serialization)
      734    0.002    0.000    0.004    0.000 base_layer.py:2340(_should_cast_single_input)
      730    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
      720    0.016    0.000    0.052    0.000 resource_variable_ops.py:341(__init__)
      706    0.008    0.000    0.809    0.001 gen_math_ops.py:391(add_n)
      706    0.001    0.000    0.012    0.000 base_layer.py:1240(<genexpr>)
      690    0.001    0.000    0.002    0.000 node.py:147(map_arguments)
      686    0.001    0.000    0.001    0.000 tf_inspect.py:283(<listcomp>)
      686    0.009    0.000    0.256    0.000 tf_inspect.py:260(getcallargs)
      684    0.001    0.000    0.003    0.000 context.py:2390(_tmp_in_graph_mode)
  684/522    0.008    0.000   17.308    0.033 deprecation.py:473(new_func)
      682    0.001    0.000    0.002    0.000 nested_structure_coder.py:333(do_encode)
      678    0.000    0.000    0.000    0.000 sequential.py:532(<genexpr>)
      676    0.001    0.000    0.005    0.000 _collections_abc.py:824(update)
      674    0.005    0.000    0.059    0.000 gradients_util.py:824(_AccumulatorShape)
      674    0.000    0.000    0.000    0.000 gradients_util.py:854(<lambda>)
      674    0.000    0.000    0.000    0.000 gradients_util.py:864(DeviceKey)
      674    0.009    0.000    0.649    0.001 gradients_util.py:850(_MultiDeviceAddN)
      661    0.000    0.000    0.000    0.000 function.py:2451(is_method)
      652    0.002    0.000    0.625    0.001 array_ops.py:59(reshape)
      652    0.007    0.000    0.605    0.001 gen_array_ops.py:8143(reshape)
      618    0.003    0.000    0.105    0.000 gen_math_ops.py:1837(cast)
  618/368    0.005    0.000    0.042    0.000 nested_structure_coder.py:179(do_encode)
      613    0.001    0.000    0.002    0.000 tensor_shape.py:856(__iter__)
      612    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
      612    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
      612    0.001    0.000    0.004    0.000 revived_types.py:140(serialize)
      608    0.000    0.000    0.000    0.000 device_spec.py:34(_as_str_or_none)
      607    0.001    0.000    0.001    0.000 threading.py:75(RLock)
      606    0.014    0.000    0.014    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
      606    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
      606    0.004    0.000    0.004    0.000 threading.py:216(__init__)
      606    0.002    0.000    0.016    0.000 c_api_util.py:45(__init__)
      606    0.026    0.000    0.055    0.000 ops.py:2862(__init__)
      606    0.000    0.000    0.000    0.000 ops.py:4981(switch_to_thread_local)
      606    0.002    0.000    0.006    0.000 lock_util.py:54(__init__)
      605    0.001    0.000    0.001    0.000 list_ops.py:364(convert)
      602    0.001    0.000    0.002    0.000 execute.py:201(make_shape)
      602    0.000    0.000    0.000    0.000 ops.py:3117(seed)
      602    0.001    0.000    0.005    0.000 op_def_library.py:184(_MakeShape)
      602    0.016    0.000    0.087    0.000 func_graph.py:165(__init__)
      601    0.004    0.000    0.004    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
      582    0.002    0.000    0.002    0.000 ops.py:4040(<listcomp>)
      582    0.002    0.000    0.005    0.000 ops.py:4037(get_all_collection_keys)
      576    0.000    0.000    0.000    0.000 resource_variable_ops.py:513(name)
      576    0.000    0.000    0.001    0.000 regularizers.py:342(serialize)
      560    0.001    0.000    0.001    0.000 base_layer.py:3001(_trackable_saved_model_saver)
      559    0.000    0.000    0.000    0.000 config_lib.py:33(matches)
      558    0.000    0.000    0.002    0.000 _collections_abc.py:851(setdefault)
      558    0.004    0.000    0.311    0.001 gen_nn_ops.py:648(bias_add)
      558    0.001    0.000    0.001    0.000 nn_ops.py:3294(_tf_deterministic_ops)
      558    0.006    0.000    0.776    0.001 nn_ops.py:3307(bias_add)
      558    0.003    0.000    0.005    0.000 base_layer.py:2528(_get_call_arg_value)
      558    0.002    0.000    1.863    0.003 core.py:1192(call)
      558    0.006    0.000    1.861    0.003 core.py:30(dense)
      556    0.000    0.000    0.001    0.000 data_structures.py:1059(<lambda>)
      549    0.019    0.000    0.116    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
      539    0.002    0.000    0.004    0.000 func_graph.py:468(variables)
      538    0.002    0.000    0.058    0.000 gen_math_ops.py:7416(real_div)
      535    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
      535    0.003    0.000    4.982    0.009 ops.py:3360(create_op)
      535    0.000    0.000    0.001    0.000 tape.py:163(should_record_backprop)
      535    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
      535    0.001    0.000    0.001    0.000 function.py:1413(__init__)
  535/470    0.001    0.000   14.002    0.030 function.py:1430(forward)
      535    0.000    0.000    0.064    0.000 function.py:1436(record)
      535    0.004    0.000    0.008    0.000 function.py:2071(_select_forward_and_backward_functions)
      535    0.001    0.000    0.002    0.000 forwardprop_util.py:34(__new__)
      535    0.004    0.000    0.521    0.001 functional_ops.py:1175(<listcomp>)
      535    0.006    0.000    0.008    0.000 functional_ops.py:1178(<listcomp>)
      535    0.028    0.000    6.273    0.012 functional_ops.py:1112(partitioned_call)
      535    0.003    0.000    0.140    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
      532    0.003    0.000    0.005    0.000 backend.py:887(name_scope)
      531    0.001    0.000    0.003    0.000 __init__.py:413(_replace)
      531    0.000    0.000    0.001    0.000 config_lib.py:50(get_action)
      513    0.003    0.000    0.003    0.000 func_graph.py:738(<listcomp>)
      513    0.001    0.000    0.004    0.000 func_graph.py:735(external_captures)
      512    0.003    0.000    0.246    0.000 gen_math_ops.py:10650(tanh)
      512    0.005    0.000    0.054    0.000 resource_variable_ops.py:830(_lazy_read)
      512    0.003    0.000    0.041    0.000 resource_variable_ops.py:1924(__init__)
      512    0.001    0.000    0.247    0.000 activations.py:305(tanh)
      511    0.008    0.000    0.048    0.000 math_ops.py:1220(_truediv_python3)
      511    0.001    0.000    0.049    0.000 math_ops.py:1267(truediv)
      508    0.001    0.000    0.006    0.000 nested_structure_coder.py:379(do_encode)
      508    0.001    0.000    0.001    0.000 nested_structure_coder.py:403(do_encode)
      508    0.000    0.000    0.001    0.000 nested_structure_coder.py:423(can_encode)
      508    0.005    0.000    0.025    0.000 nested_structure_coder.py:428(do_encode)
      507    0.007    0.000    0.082    0.000 math_ops.py:1419(_add_dispatch)
      506    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
      506    0.002    0.000    0.036    0.000 gen_math_ops.py:463(add_v2)
  506/346    0.002    0.000    2.562    0.007 smart_cond.py:27(smart_cond)
      506    0.001    0.000    0.004    0.000 smart_cond.py:62(smart_constant_value)
      500    0.002    0.000    0.002    0.000 function.py:229(_parse_func_attrs)
      500    0.002    0.000    0.002    0.000 revived_types.py:73(to_proto)
      498    0.001    0.000    0.001    0.000 _weakrefset.py:36(__init__)
      498    0.001    0.000    0.003    0.000 data_structures.py:152(__init__)
      498    0.001    0.000    0.002    0.000 layer_utils.py:179(__init__)
  498/452    0.001    0.000    3.244    0.007 layer_serialization.py:81(_get_serialized_attributes)
      495    0.207    0.000    0.207    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
      495    0.022    0.000    0.022    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
      495    0.001    0.000    0.001    0.000 c_api_util.py:86(__init__)
      495    0.001    0.000    0.002    0.000 constant_op.py:327(is_constant)
      495    0.003    0.000    0.003    0.000 function.py:423(<listcomp>)
      495    0.006    0.000    0.006    0.000 function.py:441(<listcomp>)
      495    0.004    0.000    0.007    0.000 function.py:442(<listcomp>)
      495    0.003    0.000    0.004    0.000 function.py:443(<listcomp>)
      495    0.000    0.000    0.000    0.000 function.py:445(<listcomp>)
      495    0.006    0.000    0.006    0.000 function.py:474(<listcomp>)
      495    0.003    0.000    0.006    0.000 function.py:475(<listcomp>)
      495    0.034    0.000    0.605    0.001 function.py:412(__init__)
      494    0.001    0.000    0.020    0.000 ops.py:1319(convert_to_tensor_v2)
      492    0.002    0.000    0.598    0.001 array_ops.py:1562(concat)
      492    0.006    0.000    0.596    0.001 gen_array_ops.py:1183(concat_v2)
      487    0.077    0.000    0.077    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
      487    0.001    0.000    0.079    0.000 context.py:1085(add_function)
      487    0.001    0.000    0.080    0.000 context.py:2346(add_function)
  487/273    0.005    0.000    0.045    0.000 tensor_util.py:674(_ConstantValue)
      487    0.000    0.000    0.000    0.000 function.py:381(__init__)
      483    0.000    0.000    0.000    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
      483    0.001    0.000    0.009    0.000 gen_math_ops.py:10161(sqrt)
      481    0.001    0.000    0.009    0.000 math_ops.py:4739(sqrt)
      480    0.009    0.000    0.118    0.000 resource_variable_ops.py:806(assign_add)
      480    0.001    0.000    0.015    0.000 gen_resource_variable_ops.py:23(assign_add_variable_op)
      480    0.003    0.000    0.098    0.000 variables.py:1072(_run_op)
      480    0.001    0.000    0.011    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
      480    0.001    0.000    0.001    0.000 collective_util.py:50(__init__)
      480    0.005    0.000    0.104    0.000 distribute_lib.py:2199(batch_reduce_to)
      480    0.008    0.000    0.092    0.000 distribute_lib.py:2228(<listcomp>)
      480    0.001    0.000    0.093    0.000 distribute_lib.py:2225(_batch_reduce_to)
      480    0.001    0.000    0.001    0.000 optimizer_v2.py:514(<listcomp>)
      480    0.001    0.000    0.001    0.000 optimizer_v2.py:543(<listcomp>)
      480    0.027    0.000    5.054    0.011 optimizer_v2.py:473(apply_gradients)
      480    0.003    0.000    0.107    0.000 optimizer_v2.py:563(all_reduce_fn)
      480    0.010    0.000    0.192    0.000 optimizer_v2.py:552(_aggregate_gradients)
      480    0.125    0.000    3.739    0.008 optimizer_v2.py:588(_distributed_apply)
      480    0.003    0.000    0.174    0.000 optimizer_v2.py:689(_create_all_weights)
      480    0.037    0.000    0.798    0.002 optimizer_v2.py:778(_prepare)
      480    0.005    0.000    0.146    0.000 optimizer_v2.py:797(_prepare_local)
      480    0.001    0.000    0.001    0.000 optimizer_v2.py:808(_create_hypers)
      480    0.002    0.000    0.021    0.000 optimizer_v2.py:848(_decayed_lr)
      480    0.017    0.000    0.165    0.000 adam.py:123(_create_slots)
      480    0.031    0.000    0.686    0.001 adam.py:134(_prepare_local)
      480    0.018    0.000    7.735    0.016 ppo_agent.py:319(apply_grads)
      472    0.000    0.000    0.001    0.000 control_flow_util.py:68(InXlaContext)
      472    0.000    0.000    0.000    0.000 control_flow_util.py:213(GetContainingXLAContext)
  463/364    0.001    0.000    0.307    0.001 array_ops.py:2746(wrapped)
      460    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
      452    0.001    0.000    0.001    0.000 serialized_attributes.py:171(<dictcomp>)
      452    0.001    0.000    0.002    0.000 serialized_attributes.py:168(checkpointable_objects)
      446    0.002    0.000    0.046    0.000 list_ops.py:330(_build_element_shape)
      444    0.001    0.000    0.001    0.000 ops.py:3997(get_collection)
      444    0.001    0.000    0.002    0.000 ops.py:6351(get_collection)
      444    0.001    0.000    0.003    0.000 variable_scope.py:1420(get_variable_scope_store)
      444    0.001    0.000    0.004    0.000 variable_scope.py:1433(get_variable_scope)
      442    0.001    0.000    0.005    0.000 object_identity.py:223(__len__)
      442    0.001    0.000    0.004    0.000 object_identity.py:225(<listcomp>)
      442    0.000    0.000    0.000    0.000 variable_scope.py:1166(use_resource)
      442    0.001    0.000    0.001    0.000 func_graph.py:493(<listcomp>)
      442    0.001    0.000    0.001    0.000 func_graph.py:491(variables)
      442    0.000    0.000    0.000    0.000 func_graph.py:753(<listcomp>)
      442    0.001    0.000    0.001    0.000 func_graph.py:750(deferred_internal_captures)
      442    0.001    0.000    0.001    0.000 func_graph.py:919(<listcomp>)
      442    0.001    0.000    0.005    0.000 func_graph.py:1016(<listcomp>)
  442/274    0.033    0.000   25.583    0.093 func_graph.py:801(func_graph_from_py_func)
      442    0.001    0.000    0.001    0.000 func_graph.py:1093(<listcomp>)
      442    0.001    0.000    0.002    0.000 func_graph.py:1081(flatten)
      442    0.001    0.000    0.609    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
      442    0.000    0.000    0.013    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
      442    0.004    0.000    0.036    0.000 data_structures.py:309(__init__)
      442    0.001    0.000    0.037    0.000 data_structures.py:414(__init__)
      442    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
      440    0.001    0.000    0.006    0.000 data_structures.py:650(<dictcomp>)
      440    0.001    0.000    0.007    0.000 data_structures.py:649(_list_functions_for_serialization)
      438    0.002    0.000    0.002    0.000 weakref.py:356(__init__)
      437    0.001    0.000    0.002    0.000 default_gradient.py:68(supports_default_grad)
      434    0.002    0.000    0.003    0.000 function.py:356(_inference_name)
      434    0.004    0.000    0.446    0.001 function.py:597(__init__)
      434    0.009    0.000    0.503    0.001 function.py:1460(__init__)
      434    0.001    0.000    0.017    0.000 function.py:1549(_set_function_spec)
      434    0.000    0.000    0.000    0.000 func_graph.py:748(<listcomp>)
      434    0.001    0.000    0.001    0.000 func_graph.py:745(deferred_external_captures)
      429    0.018    0.000    1.827    0.004 while_v2.py:1005(_capture_helper)
      428    0.001    0.000    0.003    0.000 device.py:133(shortcut_string_merge)
      428    0.000    0.000    0.000    0.000 device_spec.py:426(__hash__)
      428    0.000    0.000    0.003    0.000 ops.py:158(string_merge)
      428    0.002    0.000    0.003    0.000 nested_structure_coder.py:202(do_encode)
      426    0.000    0.000    0.001    0.000 object_identity.py:208(__len__)
      426    0.001    0.000    0.002    0.000 auto_control_deps.py:178(__init__)
      426    0.001    0.000    0.004    0.000 auto_control_deps.py:225(__enter__)
      426    0.155    0.000    2.351    0.006 auto_control_deps.py:301(__exit__)
      425    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddWhileInputHack}
      425    0.000    0.000    0.001    0.000 ops.py:6033(_assert_same_graph)
      425    0.001    0.000    0.458    0.001 list_ops.py:45(empty_tensor_list)
      425    0.001    0.000    0.432    0.001 list_ops.py:84(tensor_list_pop_back)
      425    0.004    0.000    0.413    0.001 gen_list_ops.py:23(empty_tensor_list)
      425    0.004    0.000    0.431    0.001 gen_list_ops.py:661(tensor_list_pop_back)
      425    0.003    0.000    0.404    0.001 gen_list_ops.py:736(tensor_list_push_back)
      425    0.001    0.000    0.006    0.000 while_v2.py:1269(_build_accumulator_name)
      425    0.001    0.000    0.004    0.000 while_v2.py:1274(_is_loop_invariant)
      425    0.001    0.000    0.005    0.000 while_v2.py:778(_get_accumulator)
      422    0.003    0.000    0.046    0.000 function.py:2299(from_function_and_signature)
      422    0.000    0.000    0.000    0.000 gradients_util.py:821(<listcomp>)
      418    0.007    0.000    0.116    0.000 save_impl.py:309(_reset_layer_losses)
      418    0.005    0.000    0.040    0.000 save_impl.py:321(_restore_layer_losses)
      414    0.002    0.000    0.007    0.000 nested_structure_coder.py:136(do_encode)
      405    0.000    0.000    0.000    0.000 function.py:1586(<genexpr>)
      402    0.001    0.000    0.010    0.000 ops.py:4368(device)
      402    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
  401/258    0.003    0.000   24.289    0.094 def_function.py:583(wrapped_fn)
      401    0.000    0.000    0.000    0.000 function.py:1581(<listcomp>)
      401    0.009    0.000    0.016    0.000 function.py:1562(_initialize_function_spec)
      401    0.000    0.000    0.000    0.000 function.py:2471(is_pure)
      401    0.000    0.000    0.000    0.000 function.py:2479(vararg_name)
      401    0.000    0.000    0.000    0.000 function.py:2836(function_spec)
      401    0.000    0.000    0.000    0.000 function.py:3061(<listcomp>)
  401/258    0.008    0.000   25.698    0.100 function.py:3047(_create_graph_function)
      401    0.000    0.000    0.000    0.000 function.py:3777(__init__)
      399    0.002    0.000    0.235    0.001 control_flow_state.py:810(_ZerosLikeV2)
      399    0.001    0.000    0.237    0.001 control_flow_state.py:834(ZerosLike)
      397    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
      397    0.001    0.000    0.001    0.000 func_graph.py:127(<listcomp>)
      396    0.000    0.000    0.002    0.000 api.py:519(<genexpr>)
      396    0.001    0.000    1.155    0.003 base_layer.py:3013(_list_extra_dependencies_for_serialization)
      396    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
      396    0.001    0.000    1.153    0.003 layer_serialization.py:73(objects_to_serialize)
      396    0.000    0.000    1.153    0.003 base_serialization.py:56(list_extra_dependencies_for_serialization)
      396    0.001    0.000    0.001    0.000 serialized_attributes.py:183(<dictcomp>)
      396    0.001    0.000    0.003    0.000 serialized_attributes.py:180(objects_to_serialize)
      392    0.001    0.000    0.009    0.000 data_structures.py:793(_checkpoint_dependencies)
      392    0.001    0.000    0.004    0.000 data_structures.py:824(_check_self_external_modification)
      391    0.003    0.000    0.007    0.000 tf_decorator.py:128(rewrap)
      391    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
      388    0.020    0.000    0.020    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
      388    0.001    0.000    0.021    0.000 c_api_util.py:94(__del__)
      384    0.000    0.000    0.005    0.000 __init__.py:133(serialize)
      384    0.000    0.000    0.001    0.000 constraints.py:285(serialize)
      380    0.043    0.000    0.043    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
      380    0.001    0.000    0.044    0.000 context.py:1154(remove_function)
      380    0.000    0.000    0.045    0.000 context.py:2351(remove_function)
      380    0.000    0.000    0.045    0.000 function.py:384(__del__)
      374    0.000    0.000    0.000    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
      368    0.000    0.000    0.000    0.000 resource_variable_ops.py:2048(_ReadGrad)
      362    0.005    0.000    0.757    0.002 math_grad.py:1672(_MatMulGrad)
      360    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
      358    0.001    0.000    0.002    0.000 save_impl.py:438(training_arg_was_passed)
      358    0.001    0.000    0.005    0.000 save_impl.py:453(get_input_arg_value)
  358/228    0.007    0.000    3.389    0.015 save_impl.py:511(wrapper)
      356    0.115    0.000    0.115    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
      356    0.000    0.000    0.115    0.000 c_api_util.py:53(__del__)
      354    0.000    0.000    0.000    0.000 ops.py:3112(seed)
      352    0.000    0.000    0.001    0.000 policy.py:461(get_config)
      352    0.000    0.000    0.002    0.000 policy.py:585(_is_convertible_to_dtype)
      352    0.002    0.000    0.004    0.000 policy.py:593(_policy_equivalent_to_dtype)
      352    0.001    0.000    0.005    0.000 policy.py:615(serialize)
  349/348    0.000    0.000    0.043    0.000 function.py:3784(__del__)
  346/186    0.001    0.000    2.507    0.013 tf_utils.py:42(smart_cond)
      343    0.000    0.000    0.001    0.000 list_ops.py:373(<listcomp>)
      342    0.001    0.000    0.001    0.000 tensor_util.py:499(<listcomp>)
      341    0.001    0.000    0.201    0.001 array_ops.py:200(fill)
      341    0.003    0.000    0.192    0.001 gen_array_ops.py:3357(fill)
  340/172    0.014    0.000    0.097    0.001 module.py:317(_flatten_module)
      336    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
      336    0.000    0.000    0.001    0.000 ops.py:2180(_set_device_from_string)
  332/198    0.004    0.000    2.257    0.011 save_impl.py:541(__call__)
      330    0.001    0.000    0.001    0.000 api.py:347(<genexpr>)
      330    0.001    0.000    0.002    0.000 api.py:343(_is_of_known_loaded_module)
      329    0.000    0.000    0.000    0.000 context.py:1841(global_seed)
      328    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
      327    0.001    0.000    0.003    0.000 ops.py:4962(prevent_feeding)
      326    0.001    0.000    0.001    0.000 function.py:2292(_deterministic_dict_values)
      326    0.000    0.000    0.001    0.000 function.py:2583(<dictcomp>)
      324    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
      324    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
      323    0.001    0.000    0.003    0.000 array_ops.py:852(_check_index)
      323    0.007    0.000    0.723    0.002 array_ops.py:872(_slice_helper)
      323    0.002    0.000    0.284    0.001 array_ops.py:1084(strided_slice)
      323    0.007    0.000    0.282    0.001 gen_array_ops.py:10170(strided_slice)
      320    0.000    0.000    0.000    0.000 summary_ops_v2.py:101(<lambda>)
      320    0.002    0.000    0.008    0.000 summary_ops_v2.py:579(summary_scope)
      320    0.000    0.000    0.000    0.000 function.py:2467(flat_input_signature)
      320    0.000    0.000    0.000    0.000 function.py:2845(flat_input_signature)
      312    0.000    0.000    0.001    0.000 device_spec.py:376(__eq__)
      312    0.000    0.000    0.000    0.000 meta_graph.py:159(mark_op_as_used)
  312/168    0.000    0.000    0.020    0.000 version_utils.py:110(<genexpr>)
      304    0.000    0.000    0.000    0.000 device_spec.py:42(_as_device_str_or_none)
      304    0.001    0.000    0.002    0.000 device_spec.py:111(__init__)
      304    0.000    0.000    0.000    0.000 device_spec.py:350(_components_to_string)
      294    0.001    0.000    0.027    0.000 utils.py:202(get_training_arg_index)
      290    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
      288    0.001    0.000    0.002    0.000 ops.py:4760(_attr_scope)
      280    0.002    0.000    0.058    0.000 def_function.py:579(_defun_with_scope)
      280    0.002    0.000    0.049    0.000 def_function.py:629(_defun)
      280    0.001    0.000    0.002    0.000 function.py:2728(__init__)
      280    0.002    0.000    0.038    0.000 function.py:2767(__init__)
      280    0.001    0.000    0.046    0.000 function.py:3632(decorated)
      280    0.000    0.000    0.047    0.000 function.py:3595(defun_with_attributes)
      268    0.000    0.000    0.001    0.000 object_identity.py:137(__delitem__)
      268    0.001    0.000    0.002    0.000 base_layer.py:2538(_set_call_arg_value)
      262    0.003    0.000    0.285    0.001 gen_math_ops.py:10731(tanh_grad)
      253    0.005    0.000    0.021    0.000 tensor_util.py:569(MakeNdarray)
      250    0.002    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
      250    0.001    0.000    0.037    0.000 function.py:2041(add_to_graph)
      250    0.004    0.000    0.096    0.000 function_serialization.py:52(serialize_concrete_function)
   248/84    0.027    0.000    0.027    0.000 version_utils.py:98(swap_class)
      244    0.000    0.000    0.001    0.000 math_grad.py:1218(_AddNGrad)
      242    0.002    0.000    0.002    0.000 {built-in method numpy.zeros}
      240    0.001    0.000    0.057    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
      240    0.002    0.000    0.047    0.000 base_layer.py:640(get_config)
  238/142    0.001    0.000    2.369    0.017 utils.py:163(replace_training_and_call)
  238/142    0.001    0.000    2.387    0.017 utils.py:153(wrap_with_training_arg)
      238    0.003    0.000    0.369    0.002 sequential.py:261(_build_graph_network_for_inferred_shape)
      232    0.003    0.000    0.187    0.001 array_ops.py:2754(zeros)
      231    0.000    0.000    0.239    0.001 array_ops.py:2811(zeros_like)
      231    0.002    0.000    0.239    0.001 array_ops.py:2895(zeros_like_impl)
      228    0.001    0.000    0.004    0.000 function.py:1494(<listcomp>)
      226    0.000    0.000    0.107    0.000 array_ops.py:783(rank)
      226    0.002    0.000    0.107    0.000 array_ops.py:819(rank_internal)
      226    0.001    0.000    3.186    0.014 functional.py:367(call)
      226    0.013    0.000    3.185    0.014 functional.py:464(_run_internal_graph)
      226    0.000    0.000    0.001    0.000 functional.py:522(_flatten_to_reference_inputs)
      226    0.003    0.000    0.019    0.000 functional.py:556(_conform_to_reference_input)
      210    0.001    0.000    0.031    0.000 gen_math_ops.py:5377(logical_and)
      210    0.001    0.000    0.032    0.000 math_ops.py:1529(logical_and)
      208    0.001    0.000    0.002    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
      208    0.005    0.000    0.061    0.000 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
      208    0.001    0.000    0.042    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
  192/140    0.002    0.000    2.598    0.019 save_impl.py:567(call_and_return_conditional_losses)
      192    0.000    0.000    0.001    0.000 version_utils.py:125(is_v1_layer_or_model)
      192    0.000    0.000    0.002    0.000 activations.py:426(serialize)
      192    0.002    0.000    0.053    0.000 core.py:1209(get_config)
      184    0.001    0.000    0.123    0.001 nn_grad.py:327(_BiasAddGrad)
      184    0.001    0.000    0.002    0.000 backend.py:1283(int_shape)
      176    0.001    0.000    0.449    0.003 array_ops.py:4589(gather)
      176    0.002    0.000    0.446    0.003 gen_array_ops.py:3790(gather_v2)
      176    0.002    0.000    0.244    0.001 math_grad.py:730(_TanhGrad)
  173/164    0.016    0.000    0.063    0.000 ops.py:6267(dismantle_graph)
      170    0.003    0.000    0.272    0.002 array_ops.py:3007(ones)
      169    0.000    0.000    0.001    0.000 func_graph.py:697(clear_captures)
  169/168    0.001    0.000    0.047    0.000 func_graph.py:1269(dismantle_func_graph)
      166    0.001    0.000    1.349    0.008 save_impl.py:585(call)
      166    0.001    0.000    1.552    0.009 utils.py:66(return_outputs_and_add_losses)
      160    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
      160    0.000    0.000    0.000    0.000 digraph.py:784(successors)
      160    0.001    0.000    0.011    0.000 check_ops.py:2157(assert_scalar_v2)
      160    0.001    0.000    0.010    0.000 check_ops.py:2180(assert_scalar)
      160    0.001    0.000    0.009    0.000 summary_ops_v2.py:78(_should_record_summaries_internal)
      160    0.000    0.000    0.010    0.000 summary_ops_v2.py:109(_should_record_summaries_v2)
      160    0.002    0.000    0.054    0.000 summary_ops_v2.py:664(record)
      160    0.002    0.000    0.071    0.000 summary_ops_v2.py:620(write)
      160    0.002    0.000    0.037    0.000 gen_summary_ops.py:667(write_summary)
      160    0.002    0.000    0.029    0.000 gen_summary_ops.py:706(write_summary_eager_fallback)
      160    0.003    0.000    0.112    0.001 summary_v2.py:33(scalar)
      152    0.000    0.000    0.116    0.001 array_ops.py:1028(slice)
      152    0.002    0.000    0.116    0.001 gen_array_ops.py:9212(_slice)
      144    0.001    0.000    0.097    0.001 resource_variable_ops.py:1419(__init__)
      144    0.009    0.000    0.096    0.001 resource_variable_ops.py:1520(_init_from_args)
      144    0.000    0.000    0.002    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
      142    0.002    0.000    0.018    0.000 def_function.py:451(__init__)
   140/51    0.002    0.000   21.836    0.428 def_function.py:663(_initialize)
   140/51    0.001    0.000   21.806    0.428 function.py:2850(_get_concrete_function_internal_garbage_collected)
      132    0.001    0.000    0.108    0.001 gen_array_ops.py:12372(zeros_like)
      130    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
      130    0.000    0.000    0.001    0.000 array_grad.py:529(_IndexedSlicesToTensorNoWarning)
      130    0.004    0.000    0.022    0.000 nested_structure_coder.py:229(do_encode)
      130    0.002    0.000    0.035    0.000 function_serialization.py:29(_serialize_function_spec)
      130    0.002    0.000    0.246    0.002 function_serialization.py:94(serialize_function)
      129    0.000    0.000    0.000    0.000 types.py:164(__get__)
      129    0.000    0.000    0.000    0.000 enum.py:633(value)
      129    0.002    0.000    0.122    0.001 array_ops.py:1393(_autopacking_helper)
      129    0.000    0.000    0.001    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
      129    0.000    0.000    0.208    0.002 array_ops.py:2926(ones_like)
      129    0.001    0.000    0.207    0.002 array_ops.py:2994(ones_like_impl)
      129    0.002    0.000    0.087    0.001 gen_array_ops.py:6416(pack)
      128    0.000    0.000    0.386    0.003 array_ops.py:4681(gather_v2)
      120    0.003    0.000    0.003    0.000 {method 'shuffle' of 'numpy.random.mtrand.RandomState' objects}
      120    0.000    0.000    0.026    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
   120/92    0.000    0.000    0.800    0.009 utils.py:170(<lambda>)
   118/70    0.000    0.000    1.616    0.023 utils.py:169(<lambda>)
      112    0.000    0.000    0.007    0.000 encoder.py:182(encode)
      112    0.036    0.000    1.632    0.015 tracking.py:103(_list_functions_for_serialization)
      112    0.000    0.000    0.035    0.000 base_layer.py:2235(variables)
      112    0.000    0.000    0.019    0.000 base_layer.py:2252(non_trainable_variables)
      112    0.000    0.000    0.001    0.000 base_layer.py:3005(_object_identifier)
      112    0.000    0.000    0.136    0.001 base_layer.py:3009(_tracking_metadata)
      112    0.000    0.000    0.114    0.001 layer_serialization.py:38(python_properties)
      112    0.002    0.000    0.083    0.001 layer_serialization.py:43(_python_properties_internal)
      112    0.001    0.000    0.062    0.001 layer_serialization.py:113(get_config)
      112    0.001    0.000    0.135    0.001 base_serialization.py:45(tracking_metadata)
      112    0.001    0.000    0.020    0.000 json_utils.py:43(encode)
      110    0.001    0.000    0.094    0.001 gen_array_ops.py:11337(tile)
      108    0.000    0.000    0.309    0.003 core.py:205(call)
   102/95    0.005    0.000    0.076    0.001 weakref.py:358(remove)
      101    0.001    0.000    0.069    0.001 gen_math_ops.py:8844(select_v2)
       94    0.001    0.000    0.098    0.001 gen_math_ops.py:4021(greater_equal)
       89    0.002    0.000    1.013    0.011 nn_grad.py:355(_BiasAddGradGrad)
    88/64    0.001    0.000    0.057    0.001 training.py:2322(_undeduplicated_weights)
       87    0.000    0.000    0.000    0.000 {built-in method numpy.frombuffer}
       86    0.001    0.000    0.316    0.004 math_grad.py:769(_TanhGradGrad)
       83    0.000    0.000    0.087    0.001 array_ops.py:368(expand_dims_v2)
       83    0.001    0.000    0.087    0.001 gen_array_ops.py:2259(expand_dims)
       82    0.001    0.000    0.010    0.000 backend.py:330(learning_phase)
       81    0.000    0.000    0.086    0.001 array_ops.py:295(expand_dims)
       81    0.001    0.000    0.077    0.001 gen_math_ops.py:3851(floor_mod)
       81    0.001    0.000    0.069    0.001 gen_math_ops.py:10493(_sum)
       81    0.000    0.000    0.072    0.001 math_ops.py:1921(reduce_sum)
       81    0.000    0.000    0.071    0.001 math_ops.py:1987(reduce_sum_with_dims)
       81    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
       80    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
       80    0.001    0.000    0.080    0.001 gen_math_ops.py:11294(unsorted_segment_sum)
       80    0.000    0.000    0.003    0.000 summary_ops_v2.py:258(as_default)
       80    0.000    0.000    0.010    0.000 summary_ops_v2.py:282(flush)
       80    0.001    0.000    0.009    0.000 summary_ops_v2.py:942(flush)
       80    0.000    0.000    0.007    0.000 gen_summary_ops.py:182(flush_summary_writer)
       80    0.000    0.000    0.038    0.000 variables.py:237(<lambda>)
       80    0.000    0.000    0.039    0.000 variables.py:223(_variable_v2_call)
       80    0.001    0.000    0.038    0.000 variable_scope.py:2616(default_variable_creator_v2)
       80    0.000    0.000    0.003    0.000 node.py:227(input_shapes)
       80    0.000    0.000    0.002    0.000 node.py:234(output_shapes)
       79    0.000    0.000    0.039    0.000 array_ops.py:713(size)
       79    0.001    0.000    0.038    0.000 array_ops.py:745(size_internal)
       78    0.001    0.000    0.075    0.001 array_ops.py:3279(pad)
       78    0.001    0.000    0.055    0.001 gen_array_ops.py:6512(pad)
       74    0.001    0.000    0.004    0.000 ops.py:2438(_set_func_attr)
       74    0.000    0.000    0.003    0.000 inspect_utils.py:82(isbuiltin)
       72    0.000    0.000    0.017    0.000 deprecation.py:311(new_func)
       72    0.002    0.000    0.123    0.002 ops.py:2284(_add_outputs)
       72    0.002    0.000    0.004    0.000 ops.py:2450(_set_type_list_attr)
       72    0.000    0.000    0.001    0.000 indexed_slices.py:121(name)
       72    0.001    0.000    0.258    0.004 indexed_slices.py:393(_indexed_slices_to_tensor)
       72    0.001    0.000    0.007    0.000 base_layer.py:1560(_clear_losses)
    72/54    0.000    0.000    0.047    0.001 training.py:2313(weights)
       70    0.001    0.000    0.048    0.001 gen_array_ops.py:1105(concat_offset)
    70/18    0.001    0.000    9.785    0.544 function.py:614(forward_backward)
       70    0.002    0.000    0.003    0.000 function.py:732(<listcomp>)
    70/15    0.011    0.000   15.032    1.002 function.py:710(_rewrite_forward_and_call_backward)
       70    0.001    0.000    0.066    0.001 array_grad.py:86(_ExtractInputShapes)
       70    0.002    0.000    0.333    0.005 array_grad.py:53(_ConcatGradHelper)
       70    0.000    0.000    0.334    0.005 array_grad.py:226(_ConcatGradV2)
       70    0.002    0.000    0.568    0.008 array_grad.py:235(_SliceGrad)
       68    0.000    0.000    0.005    0.000 resource_variable_ops.py:668(read_value)
       68    0.003    0.000    0.645    0.009 array_grad.py:618(_GatherV2Grad)
       68    0.002    0.000    0.022    0.000 base_layer.py:297(__init__)
       68    0.001    0.000    0.003    0.000 base_layer.py:2261(_set_dtype_policy)
       68    0.000    0.000    0.002    0.000 base_layer.py:2409(_init_set_name)
       68    0.001    0.000    0.010    0.000 base_layer.py:2884(_init_call_fn_args)
       68    0.000    0.000    0.006    0.000 base_layer.py:2900(_call_full_argspec)
       68    0.000    0.000    0.007    0.000 base_layer.py:2907(_call_fn_args)
       68    0.000    0.000    0.001    0.000 base_layer.py:2916(_call_fn_arg_defaults)
       68    0.000    0.000    0.001    0.000 policy.py:342(_parse_name)
       68    0.000    0.000    0.001    0.000 policy.py:296(__init__)
       68    0.000    0.000    0.028    0.000 version_utils.py:63(__new__)
       68    0.000    0.000    0.038    0.001 core.py:218(<lambda>)
    66/48    0.000    0.000    0.021    0.000 training.py:1899(non_trainable_weights)
       64    0.000    0.000    0.056    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
       64    0.000    0.000    0.115    0.002 resource_variable_ops.py:636(_map_resources)
       64    0.002    0.000    0.107    0.002 resource_variable_ops.py:1821(__init__)
       64    0.001    0.000    0.109    0.002 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
       64    0.000    0.000    0.061    0.001 variables.py:199(<lambda>)
       64    0.000    0.000    0.061    0.001 variables.py:182(_variable_v1_call)
       64    0.001    0.000    0.068    0.001 base.py:691(_add_variable_with_custom_getter)
       64    0.001    0.000    0.061    0.001 variable_scope.py:2557(default_variable_creator)
       64    0.000    0.000    0.007    0.000 saveable_object_util.py:100(f)
       64    0.000    0.000    0.092    0.001 saveable_object_util.py:119(restore)
       64    0.000    0.000    1.781    0.028 control_flow.py:382(protected_body)
       64    0.001    0.000    0.070    0.001 base_layer.py:477(add_weight)
       64    0.000    0.000    0.009    0.000 initializers_v2.py:127(__call__)
       64    0.001    0.000    0.063    0.001 base_layer_utils.py:55(make_variable)
       64    0.000    0.000    0.009    0.000 init_ops_v2.py:118(__call__)
       64    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
       64    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
       64    0.000    0.000    0.004    0.000 tf_utils.py:445(maybe_init_scope)
       64    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
       63    0.000    0.000    0.000    0.000 reportviews.py:1082(<genexpr>)
       62    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       60    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
       60    0.000    0.000    0.071    0.001 array_grad.py:754(_ReshapeGrad)
       56    0.001    0.000    0.003    0.000 data_structures.py:735(__init__)
       56    0.000    0.000    0.002    0.000 data_structures.py:832(_update_snapshot)
       56    0.001    0.000    0.014    0.000 base_layer.py:1356(updates)
       56    0.000    0.000    3.442    0.061 base_layer.py:3017(_list_functions_for_serialization)
       56    0.000    0.000    0.002    0.000 policy.py:488(global_policy)
       56    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
       56    0.000    0.000    2.095    0.037 layer_serialization.py:77(functions_to_serialize)
    56/10    0.000    0.000    2.552    0.255 layer_serialization.py:101(_get_serialized_attributes_internal)
       56    0.000    0.000    3.441    0.061 base_serialization.py:76(list_functions_for_serialization)
       56    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
       56    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
       56    0.000    0.000    0.007    0.000 json_utils.py:52(<listcomp>)
       56    0.001    0.000    0.062    0.001 save_impl.py:83(wrap_layer_objects)
    56/10    0.001    0.000    2.517    0.252 save_impl.py:134(wrap_layer_functions)
    56/10    0.000    0.000    0.892    0.089 save_impl.py:210(_replace_child_layer_functions)
       56    0.000    0.000    0.001    0.000 save_impl.py:296(_restore_child_layer_functions)
       56    0.001    0.000    0.016    0.000 save_impl.py:339(__init__)
       56    0.000    0.000    0.005    0.000 save_impl.py:367(_generate_input_signature)
       56    0.000    0.000    0.003    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
       56    0.000    0.000    0.004    0.000 save_impl.py:581(_extract_outputs_from_fn)
       56    0.000    0.000    0.001    0.000 serialized_attributes.py:174(functions_to_serialize)
       56    0.000    0.000    0.002    0.000 serialized_attributes.py:188(set_and_validate_functions)
       56    0.001    0.000    0.019    0.000 serialized_attributes.py:205(set_and_validate_objects)
       56    0.000    0.000    0.098    0.002 module.py:171(submodules)
       56    0.001    0.000    0.064    0.001 sequential.py:459(get_config)
    52/42    0.002    0.000    0.339    0.008 base_layer.py:996(_functional_construction_call)
       52    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
       52    0.001    0.000    0.086    0.002 base_layer.py:2614(_maybe_build)
       51    0.001    0.000    0.037    0.001 gen_array_ops.py:722(broadcast_gradient_args)
    51/40    0.000    0.000   21.357    0.534 function.py:3718(bound_method_wrapper)
       49    0.002    0.000    0.002    0.000 {built-in method posix.stat}
       49    0.000    0.000    0.002    0.000 genericpath.py:16(exists)
       49    0.001    0.000    0.055    0.001 gen_math_ops.py:5752(maximum)
       48    0.000    0.000    0.002    0.000 tensor_shape.py:1016(with_rank)
       48    0.001    0.000    0.005    0.000 tensor_util.py:842(constant_value_as_shape)
       48    0.001    0.000    0.039    0.001 random_ops.py:207(random_uniform)
       48    0.001    0.000    0.030    0.001 gen_random_ops.py:695(random_uniform)
       48    0.000    0.000    0.028    0.001 nn_ops.py:4865(_get_noise_shape)
       48    0.000    0.000    0.227    0.005 nn_ops.py:4890(dropout)
       48    0.002    0.000    0.227    0.005 nn_ops.py:4945(dropout_v2)
       48    0.002    0.000    0.678    0.014 math_grad.py:414(_GatherDropNegatives)
       48    0.000    0.000    0.007    0.000 training.py:589(metrics)
       48    0.000    0.000    0.234    0.005 core.py:209(dropped_inputs)
       47    0.000    0.000    0.003    0.000 tf_stack.py:105(__init__)
       47    0.001    0.000    0.047    0.001 gen_math_ops.py:4877(less)
    47/36    0.000    0.000   21.267    0.591 func_graph.py:958(wrapper)
       46    0.000    0.000    0.008    0.000 multigraph.py:1083(number_of_edges)
       46    0.000    0.000    0.004    0.000 utils.py:40(use_wrapped_call)
       44    0.000    0.000    0.001    0.000 backend.py:984(unique_object_name)
       44    0.000    0.000    0.000    0.000 graph_view.py:176(root)
       44    0.000    0.000    0.001    0.000 generic_utils.py:745(to_snake_case)
       44    0.000    0.000    0.001    0.000 while_v2.py:540(_is_trainable)
       44    0.000    0.000    0.054    0.001 while_v2.py:486(_preprocess_grad)
       42    0.000    0.000    0.001    0.000 {built-in method builtins.print}
       42    0.000    0.000    0.003    0.000 base_layer.py:2108(input_shape)
       42    0.000    0.000    0.003    0.000 base_layer.py:2162(output_shape)
       41    0.000    0.000    0.026    0.001 gen_math_ops.py:6318(neg)
       40    0.000    0.000    0.002    0.000 resource_variable_ops.py:280(__del__)
       40    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
       40    0.000    0.000    0.001    0.000 data_structures.py:338(append)
       40    0.000    0.000    0.001    0.000 data_structures.py:487(_update_snapshot)
       40    0.000    0.000    0.002    0.000 data_structures.py:564(append)
       40    0.000    0.000    0.009    0.000 sequential.py:156(add)
       40    0.000    0.000    1.965    0.049 ppo_agent.py:98(reset_env)
       40    0.030    0.001    0.036    0.001 ppo_agent.py:108(gae_estimation)
       40    0.057    0.001  119.916    2.998 ppo_agent.py:149(run_update)
       40    0.139    0.003  149.492    3.737 ppo_agent.py:123(run_episode)
       40    0.002    0.000    0.139    0.003 tf_logs.py:23(training_episode_logs)
       40    0.004    0.000    0.019    0.000 environment.py:88(calculate_phi)
       40    0.001    0.000    0.060    0.001 environment.py:215(set_target_measure)
       40    0.001    0.000    1.964    0.049 environment.py:179(reset)
       40    0.036    0.001    0.156    0.004 environment.py:301(_reset_edge_attributes)
       36    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
       36    0.000    0.000    0.022    0.001 gen_array_ops.py:8994(shape)
       36    0.000    0.000    0.001    0.000 function.py:3245(validate_signature)
       36    0.000    0.000    0.001    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
       35    0.013    0.000    0.226    0.006 gradients_util.py:52(_MarkReachedOps)
       35    0.016    0.000    0.363    0.010 gradients_util.py:72(_PendingCount)
       35    0.020    0.001    1.180    0.034 gradients_util.py:140(_DefaultGradYs)
       35    0.001    0.000    0.006    0.000 gradients_util.py:258(_StopOps)
    35/15    0.114    0.003   16.531    1.102 gradients_util.py:479(_GradientsHelper)
       35    0.002    0.000    0.013    0.000 control_flow_state.py:761(MaybeCreateControlFlowState)
       32    0.000    0.000    0.003    0.000 gen_array_ops.py:8248(reshape_eager_fallback)
       32    0.000    0.000    0.001    0.000 math_ops.py:685(sign)
       32    0.000    0.000    0.007    0.000 resource_variable_ops.py:838(assign)
       32    0.000    0.000    0.016    0.000 gen_resource_variable_ops.py:1320(variable_shape)
       32    0.000    0.000    0.006    0.000 gen_linalg_ops.py:2048(qr)
       32    0.001    0.000    0.011    0.000 random_ops.py:43(random_normal)
       32    0.000    0.000    0.005    0.000 gen_random_ops.py:612(random_standard_normal)
       32    0.000    0.000    0.257    0.008 backprop.py:601(aggregate_indexed_slices_gradients)
       32    0.000    0.000    0.515    0.016 math_grad.py:467(_UnsortedSegmentSumGrad)
       32    0.000    0.000    0.031    0.001 initializers_v2.py:439(__call__)
       32    0.001    0.000    0.031    0.001 init_ops_v2.py:619(__call__)
       32    0.000    0.000    0.012    0.000 init_ops_v2.py:1028(random_normal)
       32    0.001    0.000    0.031    0.001 saving_utils.py:147(model_metadata)
       32    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
       32    0.000    0.000    0.077    0.002 model_serialization.py:34(_python_properties_internal)
       32    0.001    0.000    0.030    0.001 core.py:1131(__init__)
       32    0.001    0.000    0.080    0.002 core.py:1159(build)
       32    0.001    0.000    0.887    0.028 tmptrnrfvd0.py:23(loop_body)
       32    0.001    0.000    0.894    0.028 tmpyi08y390.py:23(loop_body)
       32    0.000    0.000    0.052    0.002 while_v2.py:528(_zeros_like)
       28    0.000    0.000    0.022    0.001 data_structures.py:219(non_trainable_weights)
    28/19    0.001    0.000    0.002    0.000 conversion.py:129(is_whitelisted)
       28    0.000    0.000    0.000    0.000 config_lib.py:62(get_action)
       28    0.000    0.000    0.111    0.004 control_flow_util_v2.py:63(create_new_tf_function)
       28    0.000    0.000    0.000    0.000 training.py:2577(_trackable_saved_model_saver)
       28    0.000    0.000    0.000    0.000 model_serialization.py:64(object_identifier)
       27    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       27    0.000    0.000    0.000    0.000 __init__.py:736(filter)
       27    0.000    0.000    0.016    0.001 array_ops.py:2110(transpose)
       27    0.000    0.000    0.015    0.001 gen_array_ops.py:11502(transpose)
    26/24    0.000    0.000    0.759    0.032 save_impl.py:479(wrap_with_training_arg)
       22    0.000    0.000    0.004    0.000 __init__.py:881(handle)
       22    0.000    0.000    0.003    0.000 __init__.py:1002(flush)
       22    0.000    0.000    0.004    0.000 __init__.py:1013(emit)
       21    0.000    0.000    0.011    0.001 tensor_array_ops.py:1005(__init__)
       21    0.001    0.000    0.123    0.006 math_grad.py:147(_SumGrad)
       20    0.000    0.000    0.013    0.001 array_ops.py:3058(placeholder)
       20    0.000    0.000    0.013    0.001 gen_array_ops.py:6769(placeholder)
       18    0.001    0.000    1.208    0.067 tmpbie5p1vm.py:6(tf__call)
       18    0.000    0.000    0.000    0.000 tmpbie5p1vm.py:4(inner_factory)
       17    0.000    0.000    0.017    0.001 gen_math_ops.py:3174(equal)
       17    0.000    0.000    0.012    0.001 math_ops.py:429(divide)
       17    0.000    0.000    0.017    0.001 math_ops.py:1581(equal)
       17    0.001    0.000    0.014    0.001 function.py:645(<listcomp>)
    17/11    0.001    0.000    7.939    0.722 function.py:653(_backprop_function)
    17/11    0.003    0.000    9.784    0.889 function.py:625(_construct_forward_backward)
       17    0.000    0.000    0.038    0.002 math_grad.py:1270(_SubGrad)
       16    0.000    0.000    0.008    0.001 gen_nn_ops.py:4719(l2_loss)
       16    0.002    0.000    0.004    0.000 function.py:902(<listcomp>)
    16/13    0.009    0.001   13.987    1.076 function.py:868(_build_functions_for_outputs)
       16    0.000    0.000    0.027    0.002 data_structures.py:226(weights)
       16    0.007    0.000    0.136    0.009 graph_view.py:89(_serialize_slot_variables)
       16    0.013    0.001    1.280    0.080 graph_view.py:185(_breadth_first_traversal)
       16    0.000    0.000    2.733    0.171 training.py:2581(_list_functions_for_serialization)
       16    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
    16/10    0.000    0.000    3.237    0.324 model_serialization.py:45(_get_serialized_attributes_internal)
       14    0.000    0.000    3.916    0.280 backprop.py:132(_gradient_function)
       14    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       14    0.000    0.000    0.003    0.000 math_grad.py:189(EvaluateAsTuple)
       14    0.000    0.000    0.001    0.000 functional.py:237(input_shape)
       14    0.000    0.000    0.001    0.000 functional.py:272(output_shape)
       14    0.000    0.000    0.028    0.002 sequential.py:107(__init__)
       13    0.000    0.000    0.002    0.000 __init__.py:1118(emit)
       13    0.000    0.000    0.012    0.001 math_grad.py:624(_ExpGrad)
       13    0.000    0.000    0.102    0.008 math_grad.py:1616(_SelectGradV2)
       12    0.000    0.000    0.001    0.000 uuid.py:759(uuid4)
       12    0.000    0.000    0.003    0.000 op_def_library.py:700(<listcomp>)
       12    0.000    0.000    0.003    0.000 array_ops.py:2199(matrix_transpose)
       12    0.000    0.000    0.002    0.000 gen_array_ops.py:11549(transpose_eager_fallback)
       12    0.001    0.000    0.009    0.001 functional.py:117(_init_graph_network)
       12    0.000    0.000    0.021    0.002 input_layer.py:91(__init__)
       12    0.000    0.000    0.022    0.002 input_layer.py:210(Input)
       12    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
       12    0.000    0.000    0.355    0.030 sequential.py:338(build)
       11    0.000    0.000    0.010    0.001 gen_math_ops.py:6203(mul_no_nan)
       11    0.000    0.000    0.007    0.001 gen_math_ops.py:7268(_range)
       11    0.000    0.000    0.012    0.001 gen_data_flow_ops.py:704(dynamic_stitch)
       11    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
       11    0.000    0.000    0.016    0.001 math_ops.py:1731(range)
       11    0.000    0.000    0.078    0.007 math_ops.py:3894(reduced_shape)
       11    0.000    0.000    0.061    0.006 math_grad.py:249(_MeanGrad)
       11    0.000    0.000    0.007    0.001 math_grad.py:539(_NegGrad)
     10/6    0.000    0.000    0.083    0.014 control_flow.py:906(if_stmt)
     10/6    0.000    0.000    0.083    0.014 control_flow.py:1002(_py_if_stmt)
        9    0.000    0.000    0.009    0.001 array_ops.py:2029(transpose_v2)
        9    0.000    0.000    0.008    0.001 gen_math_ops.py:5832(mean)
        9    0.000    0.000    0.009    0.001 math_ops.py:2255(reduce_mean)
      9/6    0.000    0.000    0.007    0.001 tf_should_use.py:246(wrapped)
        9    0.000    0.000    0.087    0.010 math_grad.py:217(_MinOrMaxGrad)
        9    0.000    0.000    0.103    0.011 math_grad.py:1407(_RealDivGrad)
        9    0.000    0.000    0.078    0.009 math_grad.py:1505(_MaximumMinimumGrad)
      8/4    0.000    0.000    0.340    0.085 config.py:948(gin_wrapper)
        8    0.000    0.000    0.009    0.001 array_ops.py:3220(pad_v2)
        8    0.000    0.000    0.002    0.000 array_ops.py:4314(where)
        8    0.000    0.000    0.002    0.000 gen_math_ops.py:8744(select)
        8    0.000    0.000    0.002    0.000 gen_control_flow_ops.py:470(no_op)
        8    0.000    0.000    0.080    0.010 control_flow_ops.py:1100(cond)
        8    0.000    0.000    0.009    0.001 gen_io_ops.py:466(merge_v2_checkpoints)
        8    0.000    0.000    0.049    0.006 gen_io_ops.py:1694(save_v2)
        8    0.000    0.000    0.004    0.000 gen_io_ops.py:1756(sharded_filename)
        8    0.001    0.000    0.001    0.000 meta_graph.py:138(ops_used_by_graph_def)
        8    0.000    0.000    0.003    0.000 string_ops.py:48(regex_full_match)
        8    0.000    0.000    0.002    0.000 string_ops.py:540(string_join)
        8    0.000    0.000    0.002    0.000 gen_string_ops.py:586(static_regex_full_match)
        8    0.000    0.000    0.002    0.000 gen_string_ops.py:819(string_join)
        8    0.001    0.000    0.001    0.000 function.py:1197(<listcomp>)
        8    0.003    0.000    0.030    0.004 function.py:1192(_wrap_backward_function)
        8    0.000    0.000    0.064    0.008 function.py:1270(record)
        8    0.000    0.000    1.782    0.223 control_flow.py:291(for_stmt)
        8    0.000    0.000    1.781    0.223 control_flow.py:371(_py_for_stmt)
        8    0.006    0.001    0.025    0.003 graph_view.py:209(_add_attributes_to_object_graph)
        8    0.009    0.001    0.069    0.009 graph_view.py:318(_fill_object_graph_proto)
        8    0.002    0.000    0.181    0.023 graph_view.py:336(_serialize_gathered_objects)
        8    0.002    0.000    1.311    0.164 graph_view.py:412(objects_ids_and_slot_variables)
        8    0.000    0.000    0.217    0.027 math_grad.py:449(_UnsortedSegmentMinOrMaxGrad)
        8    0.000    0.000    0.015    0.002 math_grad.py:1304(_MulGrad)
        8    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
        8    0.000    0.000    0.057    0.007 functional_saver.py:57(save)
        8    0.000    0.000    0.004    0.000 functional_saver.py:115(sharded_filename)
        8    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
        8    0.000    0.000    0.003    0.000 functional_saver.py:137(__init__)
        8    0.000    0.000    0.074    0.009 functional_saver.py:252(save_fn)
        8    0.000    0.000    0.086    0.011 functional_saver.py:202(save)
        8    0.007    0.001    6.909    0.864 save.py:168(__init__)
        8    0.001    0.000    0.006    0.001 save.py:224(_add_saveable_objects)
        8    0.000    0.000    0.004    0.001 core.py:185(__init__)
        8    0.000    0.000    0.080    0.010 cond_v2.py:59(cond_v2)
        8    0.000    0.000    0.004    0.001 cond_v2.py:296(<listcomp>)
        8    0.000    0.000    0.021    0.003 cond_v2.py:192(_build_cond)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:3773(floor_div)
        7    0.000    0.000    0.004    0.001 math_ops.py:1380(floordiv)
        7    0.000    0.000    0.019    0.003 math_grad.py:35(_safe_shape_div)
        7    0.000    0.000    0.012    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
        7    0.000    0.000    0.060    0.009 math_grad.py:238(_MaxGrad)
        6    0.000    0.000    0.005    0.001 gen_array_ops.py:4378(invert_permutation)
        6    0.000    0.000    0.009    0.002 list_ops.py:59(tensor_list_reserve)
        6    0.000    0.000    0.006    0.001 list_ops.py:67(tensor_list_from_tensor)
        6    0.000    0.000    0.007    0.001 list_ops.py:74(tensor_list_get_item)
        6    0.000    0.000    0.005    0.001 gen_list_ops.py:391(tensor_list_from_tensor)
        6    0.000    0.000    0.007    0.001 gen_list_ops.py:529(tensor_list_get_item)
        6    0.000    0.000    0.009    0.002 gen_list_ops.py:859(tensor_list_reserve)
        6    0.000    0.000    0.014    0.002 gen_list_ops.py:1209(tensor_list_set_item)
        6    0.000    0.000    0.009    0.002 array_grad.py:782(_TransposeGrad)
        6    0.000    0.000    0.051    0.008 math_grad.py:1542(_MaximumGrad)
        6    0.000    0.000    0.733    0.122 tmps_e0bsah.py:6(tf__call)
        6    0.000    0.000    0.000    0.000 tmps_e0bsah.py:4(inner_factory)
        6    0.000    0.000    0.001    0.000 while_v2.py:1241(<listcomp>)
        6    0.000    0.000    0.001    0.000 while_v2.py:1233(_pack_sequence_as)
        6    0.001    0.000    0.016    0.003 while_v2.py:1222(_copy_handle_data)
        5    0.000    0.000    0.010    0.002 gen_array_ops.py:10476(strided_slice_grad)
        5    0.000    0.000    0.003    0.001 gen_math_ops.py:7495(reciprocal)
      5/4    0.009    0.002   14.001    3.500 function.py:1349(_forward_and_backward_functions)
        5    0.000    0.000    0.010    0.002 nn_grad.py:503(_BroadcastMul)
        5    0.000    0.000    0.034    0.007 nn_grad.py:543(_SparseSoftmaxCrossEntropyWithLogitsGrad)
        5    0.000    0.000    0.015    0.003 array_grad.py:263(_StridedSliceGrad)
        5    0.000    0.000    0.007    0.001 math_grad.py:643(_LogGrad)
        5    0.000    0.000    0.010    0.002 math_grad.py:1345(_MulNoNanGrad)
        4    0.027    0.007    0.027    0.007 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
        4    0.000    0.000    0.073    0.018 tmp06_ym89j.py:9(tf__signature_wrapper)
        4    0.000    0.000    0.004    0.001 __init__.py:1368(info)
        4    0.080    0.020    0.315    0.079 ops.py:3178(_as_graph_def)
        4    0.000    0.000    0.316    0.079 ops.py:3268(as_graph_def)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1211(__ne__)
        4    0.000    0.000    0.000    0.000 op_def_library.py:682(<listcomp>)
        4    0.000    0.000    0.002    0.001 array_ops.py:4207(squeeze)
        4    0.000    0.000    0.000    0.000 gen_array_ops.py:10042(<listcomp>)
        4    0.000    0.000    0.002    0.001 gen_array_ops.py:9985(squeeze)
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:1497(batch_mat_mul_v2)
        4    0.000    0.000    0.013    0.003 gen_math_ops.py:10953(unsorted_segment_max)
        4    0.000    0.000    0.013    0.003 gen_math_ops.py:11069(unsorted_segment_min)
        4    0.000    0.000    0.003    0.001 math_ops.py:3063(matmul)
        4    0.000    0.000    0.003    0.001 gen_nn_ops.py:10783(softmax)
        4    0.007    0.002    0.008    0.002 file_io.py:99(write)
        4    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        4    0.000    0.000    0.005    0.001 file_io.py:197(__exit__)
        4    0.005    0.001    0.005    0.001 file_io.py:223(close)
        4    0.000    0.000    0.014    0.003 file_io.py:323(write_string_to_file)
        4    0.000    0.000    0.016    0.004 file_io.py:549(atomic_write_string_to_file)
        4    0.000    0.000    0.004    0.001 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
        4    0.000    0.000    0.008    0.002 gen_io_ops.py:1463(restore_v2)
        4    0.000    0.000    0.018    0.004 gen_io_ops.py:1743(save_v2_eager_fallback)
        4    0.007    0.002    0.154    0.038 meta_graph.py:457(strip_graph_default_valued_attrs)
        4    0.000    0.000    0.072    0.018 function.py:1605(__call__)
        4    0.000    0.000    0.072    0.018 function.py:1657(_call_impl)
        4    0.000    0.000    0.071    0.018 function.py:1675(_call_with_flat_signature)
        4    0.000    0.000    0.004    0.001 nn_ops.py:3520(_softmax)
        4    0.000    0.000    0.004    0.001 nn_ops.py:3599(softmax)
        4    0.000    0.000    0.000    0.000 backend.py:3469(get_value)
        4    0.000    0.000    0.121    0.030 graph_view.py:364(serialize_object_graph)
        4    0.000    0.000    0.129    0.032 graph_view.py:389(frozen_saveable_objects)
        4    0.000    0.000    0.023    0.006 array_grad.py:839(_PadGrad)
        4    0.000    0.000    0.108    0.027 math_grad.py:473(_UnsortedSegmentMaxGrad)
        4    0.000    0.000    0.108    0.027 math_grad.py:479(_UnsortedSegmentMinGrad)
        4    0.000    0.000    0.124    0.031 util.py:1100(_gather_saveables)
        4    0.000    0.000    0.158    0.039 util.py:1117(_save_cached_when_graph_building)
        4    0.000    0.000    0.159    0.040 util.py:1152(save)
        4    0.000    0.000    0.103    0.026 functional_saver.py:80(restore)
        4    0.000    0.000    0.251    0.063 functional_saver.py:172(to_proto)
        4    0.000    0.000    0.057    0.014 functional_saver.py:184(_traced_save)
        4    0.000    0.000    0.107    0.027 functional_saver.py:193(_traced_restore)
        4    0.000    0.000    0.103    0.026 functional_saver.py:310(restore_fn)
        4    0.000    0.000    0.103    0.026 functional_saver.py:297(restore)
        4    0.000    0.000    0.684    0.171 save_impl.py:202(default_save_signature)
        4    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
        4    0.000    0.000    0.653    0.163 saving_utils.py:125(_wrapped_model)
        4    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
        4    0.000    0.000    2.317    0.579 signature_serialization.py:71(find_function_to_export)
        4    0.000    0.000    0.106    0.026 signature_serialization.py:96(canonicalize_signatures)
        4    0.000    0.000   11.351    2.838 training.py:1918(save)
        4    0.000    0.000   11.351    2.838 save.py:47(save_model)
        4    0.032    0.008   11.351    2.838 save.py:40(save)
        4    0.007    0.002    0.046    0.012 save.py:247(fill_object_graph_proto)
        4    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
        4    0.004    0.001    0.128    0.032 save.py:276(map_resources)
        4    0.000    0.000    0.003    0.001 save.py:367(_map_captures_to_created_tensors)
        4    0.000    0.000    0.003    0.001 save.py:399(_map_function_arguments_to_created_inputs)
        4    0.000    0.000    0.038    0.010 save.py:468(_call_function_with_mapped_captures)
        4    0.000    0.000    0.042    0.010 save.py:481(_generate_signatures)
        4    0.000    0.000    0.001    0.000 save.py:527(_trace_resource_initializers)
        4    0.001    0.000    1.125    0.281 save.py:594(_fill_meta_graph_def)
        4    0.000    0.000    0.001    0.000 save.py:677(_verify_ops)
        4    0.005    0.001    0.481    0.120 save.py:703(_serialize_object_graph)
        4    0.003    0.001   11.291    2.823 save.py:788(save)
        4    0.025    0.006   10.971    2.743 save.py:1030(_build_meta_graph)
        4    0.000    0.000    0.004    0.001 builder_impl.py:757(copy_assets_to_destination_dir)
        4    0.000    0.000    0.902    0.225 tmptrnrfvd0.py:6(tf__message_passing)
        4    0.000    0.000    0.910    0.228 tmpyi08y390.py:6(tf__message_passing)
        4    0.000    0.000    0.005    0.001 while_v2.py:1302(_set_read_only_resource_inputs_attr)
        4    0.000    0.000    0.137    0.034 while_v2.py:414(_build_while_op)
        3    0.000    0.000    0.005    0.002 tensor_array_ops.py:519(read)
        3    0.000    0.000    0.003    0.001 tensor_array_ops.py:530(write)
        3    0.000    0.000    0.004    0.001 tensor_array_ops.py:546(stack)
        3    0.000    0.000    0.004    0.001 tensor_array_ops.py:585(unstack)
        3    0.000    0.000    0.005    0.002 tensor_array_ops.py:1131(read)
        3    0.000    0.000    0.003    0.001 tensor_array_ops.py:1143(write)
        3    0.000    0.000    0.004    0.001 tensor_array_ops.py:1161(stack)
        3    0.000    0.000    0.004    0.001 tensor_array_ops.py:1206(unstack)
        3    0.000    0.000    0.001    0.000 gen_math_ops.py:3532(exp)
        3    0.000    0.000    0.003    0.001 gen_math_ops.py:4966(less_equal)
        3    0.000    0.000    0.003    0.001 gen_math_ops.py:5677(_max)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10278(square)
        3    0.000    0.000    0.004    0.001 list_ops.py:122(tensor_list_stack)
        3    0.000    0.000    0.003    0.001 list_ops.py:155(tensor_list_set_item)
        3    0.000    0.000    0.003    0.001 list_ops.py:194(_TensorListStackGrad)
        3    0.000    0.000    0.017    0.006 list_ops.py:264(_TensorListSetItemGrad)
        3    0.000    0.000    0.003    0.001 gen_list_ops.py:1344(tensor_list_stack)
        3    0.000    0.000    0.003    0.001 math_ops.py:2641(reduce_max)
        3    0.000    0.000    0.003    0.001 math_ops.py:2689(reduce_max_with_dims)
        3    0.000    0.000    0.001    0.000 default_gradient.py:52(zeros_like)
        3    0.000    0.000    0.005    0.002 math_grad.py:579(_SquareGrad)
        3    0.000    0.000    0.027    0.009 math_grad.py:1548(_MinimumGrad)
        3    0.000    0.000    0.002    0.001 categorical.py:337(_logits_parameter_no_checks)
        2    0.000    0.000   14.091    7.046 deprecation.py:558(new_func)
        2    0.001    0.000    0.003    0.001 ops.py:2220(_add_while_inputs)
        2    0.000    0.000    0.002    0.001 ops.py:2459(_set_shape_list_attr)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:5907(_min)
        2    0.000    0.000    0.001    0.001 gen_math_ops.py:5982(minimum)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:10218(sqrt_grad)
        2    0.000    0.000    0.006    0.003 math_ops.py:2315(reduce_variance)
        2    0.000    0.000    0.007    0.004 math_ops.py:2376(reduce_std)
        2    0.000    0.000    0.002    0.001 math_ops.py:2554(reduce_min)
        2    0.000    0.000    0.001    0.001 gen_nn_ops.py:11183(sparse_softmax_cross_entropy_with_logits)
        2    0.000    0.000   14.071    7.035 control_flow_ops.py:2503(while_loop)
        2    0.000    0.000    0.001    0.001 gen_functional_ops.py:884(<listcomp>)
        2    0.000    0.000    0.020    0.010 gen_functional_ops.py:830(stateless_while)
        2    0.000    0.000    0.016    0.008 gen_functional_ops.py:1084(_while)
        2    0.000    0.000    0.021    0.010 nn_ops.py:4000(sparse_softmax_cross_entropy_with_logits)
        2    0.000    0.000    0.021    0.010 nn_ops.py:4126(sparse_softmax_cross_entropy_with_logits_v2)
        2    0.000    0.000    0.005    0.002 map_fn.py:441(<listcomp>)
        2    0.000    0.000    0.004    0.002 map_fn.py:447(<listcomp>)
        2    0.000    0.000    0.005    0.003 map_fn.py:477(<listcomp>)
        2    0.000    0.000    0.003    0.002 map_fn.py:489(<listcomp>)
        2    0.000    0.000   13.999    6.999 map_fn.py:463(compute)
        2    0.000    0.000    0.002    0.001 map_fn.py:494(<lambda>)
        2    0.000    0.000    0.004    0.002 map_fn.py:500(<listcomp>)
        2    0.000    0.000   14.090    7.045 map_fn.py:45(map_fn)
        2    0.000    0.000    0.000    0.000 map_fn.py:540(_result_flat_signature_to_batchable_tensor_spec)
        2    0.000    0.000    0.000    0.000 map_fn.py:550(_elems_flat_to_batchable)
        2    0.000    0.000    0.000    0.000 map_fn.py:563(_elems_value_batchable_to_flat)
        2    0.000    0.000    0.000    0.000 map_fn.py:577(_result_value_flat_to_batchable)
        2    0.000    0.000    0.000    0.000 map_fn.py:595(_result_batchable_to_flat)
        2    0.000    0.000   14.091    7.045 map_fn.py:610(map_fn_v2)
        2    0.000    0.000    0.003    0.001 array_grad.py:766(_ReshapeToInput)
        2    0.000    0.000    0.003    0.001 array_grad.py:772(_ExpandDimsGrad)
        2    0.000    0.000    0.027    0.014 math_grad.py:244(_MinGrad)
        2    0.000    0.000    0.002    0.001 math_grad.py:589(_SqrtGrad)
        2    0.000    0.000    0.024    0.012 ppo_agent.py:239(update_eval_actor_critic_functions)
        2    0.000    0.000    0.301    0.150 ppo_agent.py:248(training_eval)
        2    0.000    0.000   11.351    5.675 ppo_agent.py:347(save_model)
        2    0.000    0.000    0.024    0.012 distribution.py:941(_call_log_prob)
        2    0.000    0.000    0.024    0.012 distribution.py:952(log_prob)
        2    0.000    0.000    0.024    0.012 categorical.py:282(_log_prob)
        2    0.000    0.000    0.002    0.001 categorical.py:332(logits_parameter)
        2    0.000    0.000    0.000    0.000 categorical.py:371(_sample_control_dependencies)
        2    0.000    0.000    0.001    0.000 decorator.py:decorator-gen-860>:1(__init__)
        2    0.000    0.000    0.020    0.010 environment.py:25(__init__)
        2    0.000    0.000    0.000    0.000 environment.py:49(<listcomp>)
        2    0.000    0.000    0.018    0.009 environment.py:160(initialize_environment)
        2    0.000    0.000    0.000    0.000 environment.py:149(load_topology_object)
        2    0.002    0.001    0.018    0.009 environment.py:193(generate_graph)
        2    0.000    0.000    0.001    0.000 environment.py:284(_define_init_weights)
        2    0.001    0.001    0.004    0.002 environment.py:289(_generate_link_indices_and_adjacencies)
        2    0.000    0.000    0.065    0.032 actor.py:9(__init__)
        2    0.000    0.000    0.042    0.021 actor.py:47(define_network)
        2    0.000    0.000    0.172    0.086 actor.py:80(build)
        2    0.000    0.000    0.074    0.037 critic.py:9(__init__)
        2    0.000    0.000    0.050    0.025 critic.py:46(define_network)
        2    0.000    0.000    0.183    0.092 critic.py:82(build)
        2    0.000    0.000    0.015    0.008 tmp90hs6z56.py:32(if_body)
        2    0.000    0.000    0.015    0.008 tmp90hs6z56.py:22(else_body_1)
        2    0.000    0.000    0.000    0.000 tmp90hs6z56.py:4(inner_factory)
        2    0.000    0.000    0.015    0.008 tmp90hs6z56.py:6(tf__message_aggregation)
        2    0.000    0.000    0.016    0.008 tmpw3nxfh62.py:6(tf__message_aggregation)
        2    0.000    0.000    0.016    0.008 tmpw3nxfh62.py:22(else_body_1)
        2    0.000    0.000    0.016    0.008 tmpw3nxfh62.py:32(if_body)
        2    0.000    0.000    0.005    0.002 while_v2.py:123(wrapped_cond)
        2    0.000    0.000    2.942    1.471 while_v2.py:654(_grad_fn)
        2    0.000    0.000    2.942    1.471 while_v2.py:622(<lambda>)
        2    0.002    0.001    0.003    0.002 while_v2.py:693(_resolve_grad_captures)
        2    0.001    0.000    3.168    1.584 while_v2.py:581(_create_grad_func)
        2    0.000    0.000   14.071    7.035 while_v2.py:58(while_loop)
        2    0.000    0.000    0.054    0.027 while_v2.py:330(<listcomp>)
        2    0.000    0.000    0.002    0.001 while_v2.py:390(grad_cond)
        2    0.000    0.000    0.003    0.002 while_v2.py:405(<listcomp>)
        2    0.001    0.000    0.342    0.171 while_v2.py:410(<listcomp>)
        2    0.000    0.000    3.899    1.949 while_v2.py:307(_WhileGrad)
        2    0.000    0.000   14.002    7.001 while_v2.py:153(wrapped_body)
        2    0.000    0.000    0.017    0.009 tmpn13wsag4.py:6(tf__generate_readout_input)
        1    0.000    0.000    3.930    3.930 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
        1    0.000    0.000    0.006    0.006 tmphesgxf3x.py:6(tf__compute_actor_loss)
        1    0.001    0.001  281.577  281.577 mate_run.py:12(step)
        1    0.000    0.000    0.246    0.246 run_experiment.py:12(__init__)
        1    0.000    0.000  281.253  281.253 run_experiment.py:38(run_experiment)
        1    0.000    0.000    0.003    0.003 run_experiment.py:42(set_logs_and_checkpoints)
        1    0.000    0.000    0.237    0.237 ppo_agent.py:22(__init__)
        1    0.000    0.000    0.001    0.001 math_ops.py:1349(multiply_no_nan)
        1    0.000    0.000    0.001    0.001 summary_ops_v2.py:363(create_file_writer_v2)
        1    0.000    0.000    0.001    0.001 random_ops.py:428(categorical)
        1    0.000    0.000    0.001    0.001 random_ops.py:456(multinomial_categorical_impl)
        1    0.000    0.000    0.001    0.001 gen_random_ops.py:23(multinomial)
        1    0.000    0.000    0.004    0.004 function.py:1234(_backward_function_wrapper)
        1    0.000    0.000    0.001    0.001 backprop.py:697(_ones)
        1    0.000    0.000    3.931    3.931 backprop.py:983(gradient)
        1    0.000    0.000    3.930    3.930 imperative_grad.py:33(imperative_grad)
        1    0.000    0.000    0.002    0.002 clip_ops.py:36(clip_by_value)
        1    0.000    0.000    0.013    0.013 clip_ops.py:238(global_norm)
        1    0.000    0.000    0.038    0.038 clip_ops.py:289(clip_by_global_norm)
        1    0.000    0.000    0.237    0.237 ppo_agent.py:82(_get_actor_critic_functions)
        1    0.003    0.003  281.253  281.253 ppo_agent.py:168(train_and_evaluate)
        1    0.000    0.000    0.014    0.014 ppo_agent.py:218(generate_eval_env)
        1    0.000    0.000    0.263    0.263 ppo_agent.py:228(generate_eval_actor_critic_functions)
        1    0.000    0.000    0.000    0.000 ppo_agent.py:386(<listcomp>)
        1    0.001    0.001    0.001    0.001 ppo_agent.py:380(set_experiment_identifier)
        1    0.000    0.000    0.001    0.001 ppo_agent.py:433(set_writer_and_checkpoint_dir)
        1    0.000    0.000    0.014    0.014 distribution.py:908(_call_sample_n)
        1    0.000    0.000    0.014    0.014 distribution.py:924(sample)
        1    0.000    0.000    0.014    0.014 distribution.py:1144(entropy)
        1    0.000    0.000    0.008    0.008 categorical.py:232(_sample_n)
        1    0.000    0.000    0.014    0.014 categorical.py:292(_entropy)
        1    0.000    0.000    0.002    0.002 categorical.py:216(_batch_shape_tensor)
        1    0.000    0.000    0.003    0.003 environment.py:169(next_sample)
        1    0.000    0.000    0.000    0.000 environment.py:102(get_current_flows)
        1    0.000    0.000    2.549    2.549 tmpuv60_8ya.py:6(tf__get_new_log_prob_and_entropy)
        1    0.000    0.000    0.365    0.365 tmpd6tk_nnx.py:6(tf__act)
        1    0.000    0.000    0.014    0.014 tmpd6tk_nnx.py:24(else_body)
        1    0.000    0.000    0.336    0.336 tmppaq_7qtn.py:6(tf__run_critic)
        1    0.000    0.000   18.255   18.255 tmpm7c5snjd.py:6(tf__compute_losses_and_grads)
        1    0.000    0.000    2.828    2.828 tmpm7c5snjd.py:12(<lambda>)
        1    0.000    0.000    0.038    0.038 tmpm7c5snjd.py:27(if_body)
        1    0.000    0.000   11.159   11.159 tmpm7c5snjd.py:11(<lambda>)
        
